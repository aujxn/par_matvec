<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1302" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1285.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1285.00"> </text><svg id="frames" x="10" width="1180" total_samples="223716919725"><g><title>[libc.so.6] (46,300,738 samples, 0.02%)</title><rect x="0.0302%" y="1189" width="0.0207%" height="15" fill="rgb(227,0,7)" fg:x="67636794" fg:w="46300738"/><text x="0.2802%" y="1199.50"></text></g><g><title>core::mem::drop (43,166,822 samples, 0.02%)</title><rect x="0.0644%" y="1109" width="0.0193%" height="15" fill="rgb(217,0,24)" fg:x="144133239" fg:w="43166822"/><text x="0.3144%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Packet&lt;()&gt;&gt;&gt; (43,166,822 samples, 0.02%)</title><rect x="0.0644%" y="1093" width="0.0193%" height="15" fill="rgb(221,193,54)" fg:x="144133239" fg:w="43166822"/><text x="0.3144%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,166,822 samples, 0.02%)</title><rect x="0.0644%" y="1077" width="0.0193%" height="15" fill="rgb(248,212,6)" fg:x="144133239" fg:w="43166822"/><text x="0.3144%" y="1087.50"></text></g><g><title>cfree (33,379,695 samples, 0.01%)</title><rect x="0.0688%" y="1061" width="0.0149%" height="15" fill="rgb(208,68,35)" fg:x="153920366" fg:w="33379695"/><text x="0.3188%" y="1071.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (190,003,225 samples, 0.08%)</title><rect x="0.1106%" y="581" width="0.0849%" height="15" fill="rgb(232,128,0)" fg:x="247526506" fg:w="190003225"/><text x="0.3606%" y="591.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (190,003,225 samples, 0.08%)</title><rect x="0.1106%" y="565" width="0.0849%" height="15" fill="rgb(207,160,47)" fg:x="247526506" fg:w="190003225"/><text x="0.3606%" y="575.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (190,003,225 samples, 0.08%)</title><rect x="0.1106%" y="549" width="0.0849%" height="15" fill="rgb(228,23,34)" fg:x="247526506" fg:w="190003225"/><text x="0.3606%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (297,556,650 samples, 0.13%)</title><rect x="0.1956%" y="581" width="0.1330%" height="15" fill="rgb(218,30,26)" fg:x="437529731" fg:w="297556650"/><text x="0.4456%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (193,745,934 samples, 0.09%)</title><rect x="0.2420%" y="565" width="0.0866%" height="15" fill="rgb(220,122,19)" fg:x="541340447" fg:w="193745934"/><text x="0.4920%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (193,745,934 samples, 0.09%)</title><rect x="0.2420%" y="549" width="0.0866%" height="15" fill="rgb(250,228,42)" fg:x="541340447" fg:w="193745934"/><text x="0.4920%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (193,745,934 samples, 0.09%)</title><rect x="0.2420%" y="533" width="0.0866%" height="15" fill="rgb(240,193,28)" fg:x="541340447" fg:w="193745934"/><text x="0.4920%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (193,745,934 samples, 0.09%)</title><rect x="0.2420%" y="517" width="0.0866%" height="15" fill="rgb(216,20,37)" fg:x="541340447" fg:w="193745934"/><text x="0.4920%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (133,679,366 samples, 0.06%)</title><rect x="0.2688%" y="501" width="0.0598%" height="15" fill="rgb(206,188,39)" fg:x="601407015" fg:w="133679366"/><text x="0.5188%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (518,737,448 samples, 0.23%)</title><rect x="0.3312%" y="533" width="0.2319%" height="15" fill="rgb(217,207,13)" fg:x="741002472" fg:w="518737448"/><text x="0.5812%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (518,737,448 samples, 0.23%)</title><rect x="0.3312%" y="517" width="0.2319%" height="15" fill="rgb(231,73,38)" fg:x="741002472" fg:w="518737448"/><text x="0.5812%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (44,319,655 samples, 0.02%)</title><rect x="0.5433%" y="501" width="0.0198%" height="15" fill="rgb(225,20,46)" fg:x="1215420265" fg:w="44319655"/><text x="0.7933%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (44,319,655 samples, 0.02%)</title><rect x="0.5433%" y="485" width="0.0198%" height="15" fill="rgb(210,31,41)" fg:x="1215420265" fg:w="44319655"/><text x="0.7933%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="709" width="2.3315%" height="15" fill="rgb(221,200,47)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="719.50">r..</text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="693" width="2.3315%" height="15" fill="rgb(226,26,5)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="703.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="677" width="2.3315%" height="15" fill="rgb(249,33,26)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="687.50">c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="661" width="2.3315%" height="15" fill="rgb(235,183,28)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="671.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="645" width="2.3315%" height="15" fill="rgb(221,5,38)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="655.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="629" width="2.3315%" height="15" fill="rgb(247,18,42)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="639.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="613" width="2.3315%" height="15" fill="rgb(241,131,45)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="623.50">c..</text></g><g><title>par_matvec::sparse_dense_impl::simple::reduce_workspaces_rayon::_{{closure}} (5,215,862,933 samples, 2.33%)</title><rect x="0.0934%" y="597" width="2.3315%" height="15" fill="rgb(249,31,29)" fg:x="209042314" fg:w="5215862933"/><text x="0.3434%" y="607.50">p..</text></g><g><title>faer::row::rowref::&lt;impl faer::row::generic::Row&lt;Inner&gt;&gt;::sum (4,683,902,775 samples, 2.09%)</title><rect x="0.3312%" y="581" width="2.0937%" height="15" fill="rgb(225,111,53)" fg:x="741002472" fg:w="4683902775"/><text x="0.5812%" y="591.50">f..</text></g><g><title>faer::mat::matref::&lt;impl faer::mat::generic::Mat&lt;Inner&gt;&gt;::sum (4,683,902,775 samples, 2.09%)</title><rect x="0.3312%" y="565" width="2.0937%" height="15" fill="rgb(238,160,17)" fg:x="741002472" fg:w="4683902775"/><text x="0.5812%" y="575.50">f..</text></g><g><title>faer::linalg::reductions::sum::sum (4,683,902,775 samples, 2.09%)</title><rect x="0.3312%" y="549" width="2.0937%" height="15" fill="rgb(214,148,48)" fg:x="741002472" fg:w="4683902775"/><text x="0.5812%" y="559.50">f..</text></g><g><title>faer_traits::math_utils::add (4,165,165,327 samples, 1.86%)</title><rect x="0.5631%" y="533" width="1.8618%" height="15" fill="rgb(232,36,49)" fg:x="1259739920" fg:w="4165165327"/><text x="0.8131%" y="543.50">f..</text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (4,165,165,327 samples, 1.86%)</title><rect x="0.5631%" y="517" width="1.8618%" height="15" fill="rgb(209,103,24)" fg:x="1259739920" fg:w="4165165327"/><text x="0.8131%" y="527.50">&lt;..</text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (4,165,165,327 samples, 1.86%)</title><rect x="0.5631%" y="501" width="1.8618%" height="15" fill="rgb(229,88,8)" fg:x="1259739920" fg:w="4165165327"/><text x="0.8131%" y="511.50">&lt;..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (4,165,165,327 samples, 1.86%)</title><rect x="0.5631%" y="485" width="1.8618%" height="15" fill="rgb(213,181,19)" fg:x="1259739920" fg:w="4165165327"/><text x="0.8131%" y="495.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (32,502,507 samples, 0.01%)</title><rect x="2.4318%" y="501" width="0.0145%" height="15" fill="rgb(254,191,54)" fg:x="5440347559" fg:w="32502507"/><text x="2.6818%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (32,502,507 samples, 0.01%)</title><rect x="2.4318%" y="485" width="0.0145%" height="15" fill="rgb(241,83,37)" fg:x="5440347559" fg:w="32502507"/><text x="2.6818%" y="495.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (26,658,962 samples, 0.01%)</title><rect x="2.4344%" y="469" width="0.0119%" height="15" fill="rgb(233,36,39)" fg:x="5446191104" fg:w="26658962"/><text x="2.6844%" y="479.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (34,679,666 samples, 0.02%)</title><rect x="2.4318%" y="517" width="0.0155%" height="15" fill="rgb(226,3,54)" fg:x="5440347559" fg:w="34679666"/><text x="2.6818%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (45,945,236 samples, 0.02%)</title><rect x="2.4480%" y="485" width="0.0205%" height="15" fill="rgb(245,192,40)" fg:x="5476512919" fg:w="45945236"/><text x="2.6980%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (45,945,236 samples, 0.02%)</title><rect x="2.4480%" y="469" width="0.0205%" height="15" fill="rgb(238,167,29)" fg:x="5476512919" fg:w="45945236"/><text x="2.6980%" y="479.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (44,435,146 samples, 0.02%)</title><rect x="2.4486%" y="453" width="0.0199%" height="15" fill="rgb(232,182,51)" fg:x="5478023009" fg:w="44435146"/><text x="2.6986%" y="463.50"></text></g><g><title>crossbeam_epoch::default::pin (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="437" width="0.0163%" height="15" fill="rgb(231,60,39)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="447.50"></text></g><g><title>crossbeam_epoch::default::with_handle (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="421" width="0.0163%" height="15" fill="rgb(208,69,12)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="405" width="0.0163%" height="15" fill="rgb(235,93,37)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="415.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="389" width="0.0163%" height="15" fill="rgb(213,116,39)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="399.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="373" width="0.0163%" height="15" fill="rgb(222,207,29)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="383.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="357" width="0.0163%" height="15" fill="rgb(206,96,30)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="367.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (36,546,411 samples, 0.02%)</title><rect x="2.4522%" y="341" width="0.0163%" height="15" fill="rgb(218,138,4)" fg:x="5485911744" fg:w="36546411"/><text x="2.7022%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (91,186,682 samples, 0.04%)</title><rect x="2.4291%" y="581" width="0.0408%" height="15" fill="rgb(250,191,14)" fg:x="5434379900" fg:w="91186682"/><text x="2.6791%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,186,682 samples, 0.04%)</title><rect x="2.4291%" y="565" width="0.0408%" height="15" fill="rgb(239,60,40)" fg:x="5434379900" fg:w="91186682"/><text x="2.6791%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91,186,682 samples, 0.04%)</title><rect x="2.4291%" y="549" width="0.0408%" height="15" fill="rgb(206,27,48)" fg:x="5434379900" fg:w="91186682"/><text x="2.6791%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (88,583,193 samples, 0.04%)</title><rect x="2.4303%" y="533" width="0.0396%" height="15" fill="rgb(225,35,8)" fg:x="5436983389" fg:w="88583193"/><text x="2.6803%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (49,053,663 samples, 0.02%)</title><rect x="2.4480%" y="517" width="0.0219%" height="15" fill="rgb(250,213,24)" fg:x="5476512919" fg:w="49053663"/><text x="2.6980%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (49,053,663 samples, 0.02%)</title><rect x="2.4480%" y="501" width="0.0219%" height="15" fill="rgb(247,123,22)" fg:x="5476512919" fg:w="49053663"/><text x="2.6980%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (94,465,794 samples, 0.04%)</title><rect x="2.4281%" y="629" width="0.0422%" height="15" fill="rgb(231,138,38)" fg:x="5432058089" fg:w="94465794"/><text x="2.6781%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (94,465,794 samples, 0.04%)</title><rect x="2.4281%" y="613" width="0.0422%" height="15" fill="rgb(231,145,46)" fg:x="5432058089" fg:w="94465794"/><text x="2.6781%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (92,143,983 samples, 0.04%)</title><rect x="2.4291%" y="597" width="0.0412%" height="15" fill="rgb(251,118,11)" fg:x="5434379900" fg:w="92143983"/><text x="2.6791%" y="607.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (114,208,701 samples, 0.05%)</title><rect x="2.4281%" y="645" width="0.0511%" height="15" fill="rgb(217,147,25)" fg:x="5432058089" fg:w="114208701"/><text x="2.6781%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (128,973,293 samples, 0.06%)</title><rect x="2.4281%" y="677" width="0.0577%" height="15" fill="rgb(247,81,37)" fg:x="5432058089" fg:w="128973293"/><text x="2.6781%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (128,973,293 samples, 0.06%)</title><rect x="2.4281%" y="661" width="0.0577%" height="15" fill="rgb(209,12,38)" fg:x="5432058089" fg:w="128973293"/><text x="2.6781%" y="671.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (115,614,893 samples, 0.05%)</title><rect x="2.4949%" y="421" width="0.0517%" height="15" fill="rgb(227,1,9)" fg:x="5581449782" fg:w="115614893"/><text x="2.7449%" y="431.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (115,614,893 samples, 0.05%)</title><rect x="2.4949%" y="405" width="0.0517%" height="15" fill="rgb(248,47,43)" fg:x="5581449782" fg:w="115614893"/><text x="2.7449%" y="415.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (115,614,893 samples, 0.05%)</title><rect x="2.4949%" y="389" width="0.0517%" height="15" fill="rgb(221,10,30)" fg:x="5581449782" fg:w="115614893"/><text x="2.7449%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (169,392,122 samples, 0.08%)</title><rect x="2.5466%" y="421" width="0.0757%" height="15" fill="rgb(210,229,1)" fg:x="5697064675" fg:w="169392122"/><text x="2.7966%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (114,547,126 samples, 0.05%)</title><rect x="2.5711%" y="405" width="0.0512%" height="15" fill="rgb(222,148,37)" fg:x="5751909671" fg:w="114547126"/><text x="2.8211%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (114,547,126 samples, 0.05%)</title><rect x="2.5711%" y="389" width="0.0512%" height="15" fill="rgb(234,67,33)" fg:x="5751909671" fg:w="114547126"/><text x="2.8211%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (114,547,126 samples, 0.05%)</title><rect x="2.5711%" y="373" width="0.0512%" height="15" fill="rgb(247,98,35)" fg:x="5751909671" fg:w="114547126"/><text x="2.8211%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (114,547,126 samples, 0.05%)</title><rect x="2.5711%" y="357" width="0.0512%" height="15" fill="rgb(247,138,52)" fg:x="5751909671" fg:w="114547126"/><text x="2.8211%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (72,279,402 samples, 0.03%)</title><rect x="2.5900%" y="341" width="0.0323%" height="15" fill="rgb(213,79,30)" fg:x="5794177395" fg:w="72279402"/><text x="2.8400%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (298,483,082 samples, 0.13%)</title><rect x="2.6265%" y="373" width="0.1334%" height="15" fill="rgb(246,177,23)" fg:x="5875829492" fg:w="298483082"/><text x="2.8765%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (298,483,082 samples, 0.13%)</title><rect x="2.6265%" y="357" width="0.1334%" height="15" fill="rgb(230,62,27)" fg:x="5875829492" fg:w="298483082"/><text x="2.8765%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (25,570,820 samples, 0.01%)</title><rect x="2.7484%" y="341" width="0.0114%" height="15" fill="rgb(216,154,8)" fg:x="6148741754" fg:w="25570820"/><text x="2.9984%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (25,570,820 samples, 0.01%)</title><rect x="2.7484%" y="325" width="0.0114%" height="15" fill="rgb(244,35,45)" fg:x="6148741754" fg:w="25570820"/><text x="2.9984%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="549" width="1.2394%" height="15" fill="rgb(251,115,12)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="559.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="533" width="1.2394%" height="15" fill="rgb(240,54,50)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="517" width="1.2394%" height="15" fill="rgb(233,84,52)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="501" width="1.2394%" height="15" fill="rgb(207,117,47)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="485" width="1.2394%" height="15" fill="rgb(249,43,39)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="469" width="1.2394%" height="15" fill="rgb(209,38,44)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="453" width="1.2394%" height="15" fill="rgb(236,212,23)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="463.50"></text></g><g><title>par_matvec::sparse_dense_impl::simple::reduce_workspaces_rayon::_{{closure}} (2,772,685,833 samples, 1.24%)</title><rect x="2.4860%" y="437" width="1.2394%" height="15" fill="rgb(242,79,21)" fg:x="5561532886" fg:w="2772685833"/><text x="2.7360%" y="447.50"></text></g><g><title>faer::row::rowref::&lt;impl faer::row::generic::Row&lt;Inner&gt;&gt;::sum (2,458,389,227 samples, 1.10%)</title><rect x="2.6265%" y="421" width="1.0989%" height="15" fill="rgb(211,96,35)" fg:x="5875829492" fg:w="2458389227"/><text x="2.8765%" y="431.50"></text></g><g><title>faer::mat::matref::&lt;impl faer::mat::generic::Mat&lt;Inner&gt;&gt;::sum (2,458,389,227 samples, 1.10%)</title><rect x="2.6265%" y="405" width="1.0989%" height="15" fill="rgb(253,215,40)" fg:x="5875829492" fg:w="2458389227"/><text x="2.8765%" y="415.50"></text></g><g><title>faer::linalg::reductions::sum::sum (2,458,389,227 samples, 1.10%)</title><rect x="2.6265%" y="389" width="1.0989%" height="15" fill="rgb(211,81,21)" fg:x="5875829492" fg:w="2458389227"/><text x="2.8765%" y="399.50"></text></g><g><title>faer_traits::math_utils::add (2,159,906,145 samples, 0.97%)</title><rect x="2.7599%" y="373" width="0.9655%" height="15" fill="rgb(208,190,38)" fg:x="6174312574" fg:w="2159906145"/><text x="3.0099%" y="383.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (2,159,906,145 samples, 0.97%)</title><rect x="2.7599%" y="357" width="0.9655%" height="15" fill="rgb(235,213,38)" fg:x="6174312574" fg:w="2159906145"/><text x="3.0099%" y="367.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (2,159,906,145 samples, 0.97%)</title><rect x="2.7599%" y="341" width="0.9655%" height="15" fill="rgb(237,122,38)" fg:x="6174312574" fg:w="2159906145"/><text x="3.0099%" y="351.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (2,159,906,145 samples, 0.97%)</title><rect x="2.7599%" y="325" width="0.9655%" height="15" fill="rgb(244,218,35)" fg:x="6174312574" fg:w="2159906145"/><text x="3.0099%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (45,396,945 samples, 0.02%)</title><rect x="3.7348%" y="453" width="0.0203%" height="15" fill="rgb(240,68,47)" fg:x="8355423273" fg:w="45396945"/><text x="3.9848%" y="463.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (45,396,945 samples, 0.02%)</title><rect x="3.7348%" y="437" width="0.0203%" height="15" fill="rgb(210,16,53)" fg:x="8355423273" fg:w="45396945"/><text x="3.9848%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (39,659,941 samples, 0.02%)</title><rect x="3.7374%" y="421" width="0.0177%" height="15" fill="rgb(235,124,12)" fg:x="8361160277" fg:w="39659941"/><text x="3.9874%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (39,659,941 samples, 0.02%)</title><rect x="3.7374%" y="405" width="0.0177%" height="15" fill="rgb(224,169,11)" fg:x="8361160277" fg:w="39659941"/><text x="3.9874%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39,659,941 samples, 0.02%)</title><rect x="3.7374%" y="389" width="0.0177%" height="15" fill="rgb(250,166,2)" fg:x="8361160277" fg:w="39659941"/><text x="3.9874%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39,659,941 samples, 0.02%)</title><rect x="3.7374%" y="373" width="0.0177%" height="15" fill="rgb(242,216,29)" fg:x="8361160277" fg:w="39659941"/><text x="3.9874%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37,504,127 samples, 0.02%)</title><rect x="3.7383%" y="357" width="0.0168%" height="15" fill="rgb(230,116,27)" fg:x="8363316091" fg:w="37504127"/><text x="3.9883%" y="367.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (28,668,470 samples, 0.01%)</title><rect x="3.7423%" y="341" width="0.0128%" height="15" fill="rgb(228,99,48)" fg:x="8372151748" fg:w="28668470"/><text x="3.9923%" y="351.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (28,668,470 samples, 0.01%)</title><rect x="3.7423%" y="325" width="0.0128%" height="15" fill="rgb(253,11,6)" fg:x="8372151748" fg:w="28668470"/><text x="3.9923%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (28,668,470 samples, 0.01%)</title><rect x="3.7423%" y="309" width="0.0128%" height="15" fill="rgb(247,143,39)" fg:x="8372151748" fg:w="28668470"/><text x="3.9923%" y="319.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (28,668,470 samples, 0.01%)</title><rect x="3.7423%" y="293" width="0.0128%" height="15" fill="rgb(236,97,10)" fg:x="8372151748" fg:w="28668470"/><text x="3.9923%" y="303.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (27,562,722 samples, 0.01%)</title><rect x="3.7428%" y="277" width="0.0123%" height="15" fill="rgb(233,208,19)" fg:x="8373257496" fg:w="27562722"/><text x="3.9928%" y="287.50"></text></g><g><title>crossbeam_epoch::default::pin (24,308,698 samples, 0.01%)</title><rect x="3.7442%" y="261" width="0.0109%" height="15" fill="rgb(216,164,2)" fg:x="8376511520" fg:w="24308698"/><text x="3.9942%" y="271.50"></text></g><g><title>crossbeam_epoch::default::with_handle (24,308,698 samples, 0.01%)</title><rect x="3.7442%" y="245" width="0.0109%" height="15" fill="rgb(220,129,5)" fg:x="8376511520" fg:w="24308698"/><text x="3.9942%" y="255.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,308,698 samples, 0.01%)</title><rect x="3.7442%" y="229" width="0.0109%" height="15" fill="rgb(242,17,10)" fg:x="8376511520" fg:w="24308698"/><text x="3.9942%" y="239.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (23,160,597 samples, 0.01%)</title><rect x="3.7448%" y="213" width="0.0104%" height="15" fill="rgb(242,107,0)" fg:x="8377659621" fg:w="23160597"/><text x="3.9948%" y="223.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (23,160,597 samples, 0.01%)</title><rect x="3.7448%" y="197" width="0.0104%" height="15" fill="rgb(251,28,31)" fg:x="8377659621" fg:w="23160597"/><text x="3.9948%" y="207.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (23,160,597 samples, 0.01%)</title><rect x="3.7448%" y="181" width="0.0104%" height="15" fill="rgb(233,223,10)" fg:x="8377659621" fg:w="23160597"/><text x="3.9948%" y="191.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (23,160,597 samples, 0.01%)</title><rect x="3.7448%" y="165" width="0.0104%" height="15" fill="rgb(215,21,27)" fg:x="8377659621" fg:w="23160597"/><text x="3.9948%" y="175.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (48,161,980 samples, 0.02%)</title><rect x="3.7348%" y="469" width="0.0215%" height="15" fill="rgb(232,23,21)" fg:x="8355423273" fg:w="48161980"/><text x="3.9848%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (52,996,030 samples, 0.02%)</title><rect x="3.7338%" y="501" width="0.0237%" height="15" fill="rgb(244,5,23)" fg:x="8353139218" fg:w="52996030"/><text x="3.9838%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (52,996,030 samples, 0.02%)</title><rect x="3.7338%" y="485" width="0.0237%" height="15" fill="rgb(226,81,46)" fg:x="8353139218" fg:w="52996030"/><text x="3.9838%" y="495.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (38,778,073 samples, 0.02%)</title><rect x="3.7611%" y="245" width="0.0173%" height="15" fill="rgb(247,70,30)" fg:x="8414214770" fg:w="38778073"/><text x="4.0111%" y="255.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (38,778,073 samples, 0.02%)</title><rect x="3.7611%" y="229" width="0.0173%" height="15" fill="rgb(212,68,19)" fg:x="8414214770" fg:w="38778073"/><text x="4.0111%" y="239.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (38,778,073 samples, 0.02%)</title><rect x="3.7611%" y="213" width="0.0173%" height="15" fill="rgb(240,187,13)" fg:x="8414214770" fg:w="38778073"/><text x="4.0111%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (98,745,923 samples, 0.04%)</title><rect x="3.7784%" y="245" width="0.0441%" height="15" fill="rgb(223,113,26)" fg:x="8452992843" fg:w="98745923"/><text x="4.0284%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67,451,751 samples, 0.03%)</title><rect x="3.7924%" y="229" width="0.0302%" height="15" fill="rgb(206,192,2)" fg:x="8484287015" fg:w="67451751"/><text x="4.0424%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (67,451,751 samples, 0.03%)</title><rect x="3.7924%" y="213" width="0.0302%" height="15" fill="rgb(241,108,4)" fg:x="8484287015" fg:w="67451751"/><text x="4.0424%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (67,451,751 samples, 0.03%)</title><rect x="3.7924%" y="197" width="0.0302%" height="15" fill="rgb(247,173,49)" fg:x="8484287015" fg:w="67451751"/><text x="4.0424%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (67,451,751 samples, 0.03%)</title><rect x="3.7924%" y="181" width="0.0302%" height="15" fill="rgb(224,114,35)" fg:x="8484287015" fg:w="67451751"/><text x="4.0424%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (39,099,243 samples, 0.02%)</title><rect x="3.8051%" y="165" width="0.0175%" height="15" fill="rgb(245,159,27)" fg:x="8512639523" fg:w="39099243"/><text x="4.0551%" y="175.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (165,883,198 samples, 0.07%)</title><rect x="3.8254%" y="197" width="0.0741%" height="15" fill="rgb(245,172,44)" fg:x="8557993445" fg:w="165883198"/><text x="4.0754%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (165,883,198 samples, 0.07%)</title><rect x="3.8254%" y="181" width="0.0741%" height="15" fill="rgb(236,23,11)" fg:x="8557993445" fg:w="165883198"/><text x="4.0754%" y="191.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (9,446,587,683 samples, 4.22%)</title><rect x="0.0926%" y="757" width="4.2226%" height="15" fill="rgb(205,117,38)" fg:x="207095578" fg:w="9446587683"/><text x="0.3426%" y="767.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (9,446,587,683 samples, 4.22%)</title><rect x="0.0926%" y="741" width="4.2226%" height="15" fill="rgb(237,72,25)" fg:x="207095578" fg:w="9446587683"/><text x="0.3426%" y="751.50">rayon..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9,446,587,683 samples, 4.22%)</title><rect x="0.0926%" y="725" width="4.2226%" height="15" fill="rgb(244,70,9)" fg:x="207095578" fg:w="9446587683"/><text x="0.3426%" y="735.50">rayon..</text></g><g><title>rayon_core::join::join_context (4,228,778,014 samples, 1.89%)</title><rect x="2.4249%" y="709" width="1.8902%" height="15" fill="rgb(217,125,39)" fg:x="5424905247" fg:w="4228778014"/><text x="2.6749%" y="719.50">r..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4,228,778,014 samples, 1.89%)</title><rect x="2.4249%" y="693" width="1.8902%" height="15" fill="rgb(235,36,10)" fg:x="5424905247" fg:w="4228778014"/><text x="2.6749%" y="703.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="677" width="1.8294%" height="15" fill="rgb(251,123,47)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="687.50">r..</text></g><g><title>std::panic::catch_unwind (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="661" width="1.8294%" height="15" fill="rgb(221,13,13)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="671.50">s..</text></g><g><title>std::panicking::try (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="645" width="1.8294%" height="15" fill="rgb(238,131,9)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="655.50">s..</text></g><g><title>std::panicking::try::do_call (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="629" width="1.8294%" height="15" fill="rgb(211,50,8)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="639.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="613" width="1.8294%" height="15" fill="rgb(245,182,24)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="623.50">&lt;..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="597" width="1.8294%" height="15" fill="rgb(242,14,37)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="607.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="581" width="1.8294%" height="15" fill="rgb(246,228,12)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="591.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4,092,651,879 samples, 1.83%)</title><rect x="2.4857%" y="565" width="1.8294%" height="15" fill="rgb(213,55,15)" fg:x="5561031382" fg:w="4092651879"/><text x="2.7357%" y="575.50">r..</text></g><g><title>rayon_core::join::join_context (1,319,464,542 samples, 0.59%)</title><rect x="3.7253%" y="549" width="0.5898%" height="15" fill="rgb(209,9,3)" fg:x="8334218719" fg:w="1319464542"/><text x="3.9753%" y="559.50"></text></g><g><title>rayon_core::registry::in_worker (1,319,464,542 samples, 0.59%)</title><rect x="3.7253%" y="533" width="0.5898%" height="15" fill="rgb(230,59,30)" fg:x="8334218719" fg:w="1319464542"/><text x="3.9753%" y="543.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,319,464,542 samples, 0.59%)</title><rect x="3.7253%" y="517" width="0.5898%" height="15" fill="rgb(209,121,21)" fg:x="8334218719" fg:w="1319464542"/><text x="3.9753%" y="527.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="501" width="0.5576%" height="15" fill="rgb(220,109,13)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="511.50"></text></g><g><title>std::panic::catch_unwind (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="485" width="0.5576%" height="15" fill="rgb(232,18,1)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="495.50"></text></g><g><title>std::panicking::try (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="469" width="0.5576%" height="15" fill="rgb(215,41,42)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="479.50"></text></g><g><title>std::panicking::try::do_call (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="453" width="0.5576%" height="15" fill="rgb(224,123,36)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="463.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="437" width="0.5576%" height="15" fill="rgb(240,125,3)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="447.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="421" width="0.5576%" height="15" fill="rgb(205,98,50)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="405" width="0.5576%" height="15" fill="rgb(205,185,37)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="389" width="0.5576%" height="15" fill="rgb(238,207,15)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="399.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="373" width="0.5576%" height="15" fill="rgb(213,199,42)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="383.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="357" width="0.5576%" height="15" fill="rgb(235,201,11)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="341" width="0.5576%" height="15" fill="rgb(207,46,11)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="325" width="0.5576%" height="15" fill="rgb(241,35,35)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="309" width="0.5576%" height="15" fill="rgb(243,32,47)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="293" width="0.5576%" height="15" fill="rgb(247,202,23)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="277" width="0.5576%" height="15" fill="rgb(219,102,11)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="287.50"></text></g><g><title>par_matvec::sparse_dense_impl::simple::reduce_workspaces_rayon::_{{closure}} (1,247,548,013 samples, 0.56%)</title><rect x="3.7575%" y="261" width="0.5576%" height="15" fill="rgb(243,110,44)" fg:x="8406135248" fg:w="1247548013"/><text x="4.0075%" y="271.50"></text></g><g><title>faer::row::rowref::&lt;impl faer::row::generic::Row&lt;Inner&gt;&gt;::sum (1,098,742,367 samples, 0.49%)</title><rect x="3.8240%" y="245" width="0.4911%" height="15" fill="rgb(222,74,54)" fg:x="8554940894" fg:w="1098742367"/><text x="4.0740%" y="255.50"></text></g><g><title>faer::mat::matref::&lt;impl faer::mat::generic::Mat&lt;Inner&gt;&gt;::sum (1,098,742,367 samples, 0.49%)</title><rect x="3.8240%" y="229" width="0.4911%" height="15" fill="rgb(216,99,12)" fg:x="8554940894" fg:w="1098742367"/><text x="4.0740%" y="239.50"></text></g><g><title>faer::linalg::reductions::sum::sum (1,098,742,367 samples, 0.49%)</title><rect x="3.8240%" y="213" width="0.4911%" height="15" fill="rgb(226,22,26)" fg:x="8554940894" fg:w="1098742367"/><text x="4.0740%" y="223.50"></text></g><g><title>faer_traits::math_utils::add (929,806,618 samples, 0.42%)</title><rect x="3.8995%" y="197" width="0.4156%" height="15" fill="rgb(217,163,10)" fg:x="8723876643" fg:w="929806618"/><text x="4.1495%" y="207.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (929,806,618 samples, 0.42%)</title><rect x="3.8995%" y="181" width="0.4156%" height="15" fill="rgb(213,25,53)" fg:x="8723876643" fg:w="929806618"/><text x="4.1495%" y="191.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (929,806,618 samples, 0.42%)</title><rect x="3.8995%" y="165" width="0.4156%" height="15" fill="rgb(252,105,26)" fg:x="8723876643" fg:w="929806618"/><text x="4.1495%" y="175.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (929,806,618 samples, 0.42%)</title><rect x="3.8995%" y="149" width="0.4156%" height="15" fill="rgb(220,39,43)" fg:x="8723876643" fg:w="929806618"/><text x="4.1495%" y="159.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="693" width="0.0115%" height="15" fill="rgb(229,68,48)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="677" width="0.0115%" height="15" fill="rgb(252,8,32)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="687.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="661" width="0.0115%" height="15" fill="rgb(223,20,43)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="671.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="645" width="0.0115%" height="15" fill="rgb(229,81,49)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="629" width="0.0115%" height="15" fill="rgb(236,28,36)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="613" width="0.0115%" height="15" fill="rgb(249,185,26)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="597" width="0.0115%" height="15" fill="rgb(249,174,33)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25,825,558 samples, 0.01%)</title><rect x="4.3161%" y="581" width="0.0115%" height="15" fill="rgb(233,201,37)" fg:x="9655896642" fg:w="25825558"/><text x="4.5661%" y="591.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (29,604,230 samples, 0.01%)</title><rect x="4.3161%" y="725" width="0.0132%" height="15" fill="rgb(221,78,26)" fg:x="9655896642" fg:w="29604230"/><text x="4.5661%" y="735.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (29,604,230 samples, 0.01%)</title><rect x="4.3161%" y="709" width="0.0132%" height="15" fill="rgb(250,127,30)" fg:x="9655896642" fg:w="29604230"/><text x="4.5661%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (23,771,157 samples, 0.01%)</title><rect x="4.3325%" y="517" width="0.0106%" height="15" fill="rgb(230,49,44)" fg:x="9692456334" fg:w="23771157"/><text x="4.5825%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (23,771,157 samples, 0.01%)</title><rect x="4.3325%" y="501" width="0.0106%" height="15" fill="rgb(229,67,23)" fg:x="9692456334" fg:w="23771157"/><text x="4.5825%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (22,472,987 samples, 0.01%)</title><rect x="4.3330%" y="485" width="0.0100%" height="15" fill="rgb(249,83,47)" fg:x="9693754504" fg:w="22472987"/><text x="4.5830%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (22,472,987 samples, 0.01%)</title><rect x="4.3330%" y="469" width="0.0100%" height="15" fill="rgb(215,43,3)" fg:x="9693754504" fg:w="22472987"/><text x="4.5830%" y="479.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (26,315,120 samples, 0.01%)</title><rect x="4.3325%" y="533" width="0.0118%" height="15" fill="rgb(238,154,13)" fg:x="9692456334" fg:w="26315120"/><text x="4.5825%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (39,112,244 samples, 0.02%)</title><rect x="4.3325%" y="565" width="0.0175%" height="15" fill="rgb(219,56,2)" fg:x="9692456334" fg:w="39112244"/><text x="4.5825%" y="575.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (39,112,244 samples, 0.02%)</title><rect x="4.3325%" y="549" width="0.0175%" height="15" fill="rgb(233,0,4)" fg:x="9692456334" fg:w="39112244"/><text x="4.5825%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="341" width="0.0169%" height="15" fill="rgb(235,30,7)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="351.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="325" width="0.0169%" height="15" fill="rgb(250,79,13)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="335.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="309" width="0.0169%" height="15" fill="rgb(211,146,34)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="293" width="0.0169%" height="15" fill="rgb(228,22,38)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="277" width="0.0169%" height="15" fill="rgb(235,168,5)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="261" width="0.0169%" height="15" fill="rgb(221,155,16)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (37,718,906 samples, 0.02%)</title><rect x="4.3578%" y="245" width="0.0169%" height="15" fill="rgb(215,215,53)" fg:x="9749174654" fg:w="37718906"/><text x="4.6078%" y="255.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (39,915,759 samples, 0.02%)</title><rect x="4.3578%" y="357" width="0.0178%" height="15" fill="rgb(223,4,10)" fg:x="9749174654" fg:w="39915759"/><text x="4.6078%" y="367.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (60,424,380 samples, 0.03%)</title><rect x="4.3515%" y="389" width="0.0270%" height="15" fill="rgb(234,103,6)" fg:x="9734955465" fg:w="60424380"/><text x="4.6015%" y="399.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (60,424,380 samples, 0.03%)</title><rect x="4.3515%" y="373" width="0.0270%" height="15" fill="rgb(227,97,0)" fg:x="9734955465" fg:w="60424380"/><text x="4.6015%" y="383.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (50,362,155 samples, 0.02%)</title><rect x="4.3817%" y="133" width="0.0225%" height="15" fill="rgb(234,150,53)" fg:x="9802581826" fg:w="50362155"/><text x="4.6317%" y="143.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (50,362,155 samples, 0.02%)</title><rect x="4.3817%" y="117" width="0.0225%" height="15" fill="rgb(228,201,54)" fg:x="9802581826" fg:w="50362155"/><text x="4.6317%" y="127.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (50,362,155 samples, 0.02%)</title><rect x="4.3817%" y="101" width="0.0225%" height="15" fill="rgb(222,22,37)" fg:x="9802581826" fg:w="50362155"/><text x="4.6317%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (64,511,104 samples, 0.03%)</title><rect x="4.4042%" y="133" width="0.0288%" height="15" fill="rgb(237,53,32)" fg:x="9852943981" fg:w="64511104"/><text x="4.6542%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40,281,661 samples, 0.02%)</title><rect x="4.4150%" y="117" width="0.0180%" height="15" fill="rgb(233,25,53)" fg:x="9877173424" fg:w="40281661"/><text x="4.6650%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (40,281,661 samples, 0.02%)</title><rect x="4.4150%" y="101" width="0.0180%" height="15" fill="rgb(210,40,34)" fg:x="9877173424" fg:w="40281661"/><text x="4.6650%" y="111.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (40,281,661 samples, 0.02%)</title><rect x="4.4150%" y="85" width="0.0180%" height="15" fill="rgb(241,220,44)" fg:x="9877173424" fg:w="40281661"/><text x="4.6650%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (40,281,661 samples, 0.02%)</title><rect x="4.4150%" y="69" width="0.0180%" height="15" fill="rgb(235,28,35)" fg:x="9877173424" fg:w="40281661"/><text x="4.6650%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (29,528,910 samples, 0.01%)</title><rect x="4.4198%" y="53" width="0.0132%" height="15" fill="rgb(210,56,17)" fg:x="9887926175" fg:w="29528910"/><text x="4.6698%" y="63.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (94,585,888 samples, 0.04%)</title><rect x="4.4330%" y="85" width="0.0423%" height="15" fill="rgb(224,130,29)" fg:x="9917455085" fg:w="94585888"/><text x="4.6830%" y="95.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (94,585,888 samples, 0.04%)</title><rect x="4.4330%" y="69" width="0.0423%" height="15" fill="rgb(235,212,8)" fg:x="9917455085" fg:w="94585888"/><text x="4.6830%" y="79.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10,831,351,372 samples, 4.84%)</title><rect x="0.0891%" y="917" width="4.8415%" height="15" fill="rgb(223,33,50)" fg:x="199379281" fg:w="10831351372"/><text x="0.3391%" y="927.50">rayon_..</text></g><g><title>rayon_core::job::JobRef::execute (10,831,351,372 samples, 4.84%)</title><rect x="0.0891%" y="901" width="4.8415%" height="15" fill="rgb(219,149,13)" fg:x="199379281" fg:w="10831351372"/><text x="0.3391%" y="911.50">rayon_..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10,829,580,259 samples, 4.84%)</title><rect x="0.0899%" y="885" width="4.8408%" height="15" fill="rgb(250,156,29)" fg:x="201150394" fg:w="10829580259"/><text x="0.3399%" y="895.50">&lt;rayon..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="869" width="4.8381%" height="15" fill="rgb(216,193,19)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="879.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="853" width="4.8381%" height="15" fill="rgb(216,135,14)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="863.50">rayon_..</text></g><g><title>std::panic::catch_unwind (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="837" width="4.8381%" height="15" fill="rgb(241,47,5)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="847.50">std::p..</text></g><g><title>std::panicking::try (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="821" width="4.8381%" height="15" fill="rgb(233,42,35)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="831.50">std::p..</text></g><g><title>std::panicking::try::do_call (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="805" width="4.8381%" height="15" fill="rgb(231,13,6)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="815.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="789" width="4.8381%" height="15" fill="rgb(207,181,40)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="799.50">&lt;core:..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::_{{closure}} (10,823,635,075 samples, 4.84%)</title><rect x="0.0926%" y="773" width="4.8381%" height="15" fill="rgb(254,173,49)" fg:x="207095578" fg:w="10823635075"/><text x="0.3426%" y="783.50">rayon_..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}}::_{{closure}} (1,377,047,392 samples, 0.62%)</title><rect x="4.3151%" y="757" width="0.6155%" height="15" fill="rgb(221,1,38)" fg:x="9653683261" fg:w="1377047392"/><text x="4.5651%" y="767.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,377,047,392 samples, 0.62%)</title><rect x="4.3151%" y="741" width="0.6155%" height="15" fill="rgb(206,124,46)" fg:x="9653683261" fg:w="1377047392"/><text x="4.5651%" y="751.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="725" width="0.6013%" height="15" fill="rgb(249,21,11)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="735.50"></text></g><g><title>std::panic::catch_unwind (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="709" width="0.6013%" height="15" fill="rgb(222,201,40)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="719.50"></text></g><g><title>std::panicking::try (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="693" width="0.6013%" height="15" fill="rgb(235,61,29)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="703.50"></text></g><g><title>std::panicking::try::do_call (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="677" width="0.6013%" height="15" fill="rgb(219,207,3)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="661" width="0.6013%" height="15" fill="rgb(222,56,46)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="645" width="0.6013%" height="15" fill="rgb(239,76,54)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,345,229,781 samples, 0.60%)</title><rect x="4.3294%" y="629" width="0.6013%" height="15" fill="rgb(231,124,27)" fg:x="9685500872" fg:w="1345229781"/><text x="4.5794%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,343,881,103 samples, 0.60%)</title><rect x="4.3300%" y="613" width="0.6007%" height="15" fill="rgb(249,195,6)" fg:x="9686849550" fg:w="1343881103"/><text x="4.5800%" y="623.50"></text></g><g><title>rayon_core::join::join_context (1,343,881,103 samples, 0.60%)</title><rect x="4.3300%" y="597" width="0.6007%" height="15" fill="rgb(237,174,47)" fg:x="9686849550" fg:w="1343881103"/><text x="4.5800%" y="607.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,343,881,103 samples, 0.60%)</title><rect x="4.3300%" y="581" width="0.6007%" height="15" fill="rgb(206,201,31)" fg:x="9686849550" fg:w="1343881103"/><text x="4.5800%" y="591.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="565" width="0.5807%" height="15" fill="rgb(231,57,52)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="575.50"></text></g><g><title>std::panic::catch_unwind (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="549" width="0.5807%" height="15" fill="rgb(248,177,22)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="559.50"></text></g><g><title>std::panicking::try (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="533" width="0.5807%" height="15" fill="rgb(215,211,37)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="543.50"></text></g><g><title>std::panicking::try::do_call (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="517" width="0.5807%" height="15" fill="rgb(241,128,51)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="501" width="0.5807%" height="15" fill="rgb(227,165,31)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="511.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="485" width="0.5807%" height="15" fill="rgb(228,167,24)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="469" width="0.5807%" height="15" fill="rgb(228,143,12)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="453" width="0.5807%" height="15" fill="rgb(249,149,8)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="463.50"></text></g><g><title>rayon_core::join::join_context (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="437" width="0.5807%" height="15" fill="rgb(243,35,44)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="421" width="0.5807%" height="15" fill="rgb(246,89,9)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="431.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1,299,162,075 samples, 0.58%)</title><rect x="4.3499%" y="405" width="0.5807%" height="15" fill="rgb(233,213,13)" fg:x="9731568578" fg:w="1299162075"/><text x="4.5999%" y="415.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="389" width="0.5522%" height="15" fill="rgb(233,141,41)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="399.50"></text></g><g><title>std::panic::catch_unwind (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="373" width="0.5522%" height="15" fill="rgb(239,167,4)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="383.50"></text></g><g><title>std::panicking::try (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="357" width="0.5522%" height="15" fill="rgb(209,217,16)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="367.50"></text></g><g><title>std::panicking::try::do_call (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="341" width="0.5522%" height="15" fill="rgb(219,88,35)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="351.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="325" width="0.5522%" height="15" fill="rgb(220,193,23)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="335.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="309" width="0.5522%" height="15" fill="rgb(230,90,52)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="293" width="0.5522%" height="15" fill="rgb(252,106,19)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="303.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="277" width="0.5522%" height="15" fill="rgb(206,74,20)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="261" width="0.5522%" height="15" fill="rgb(230,138,44)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="271.50"></text></g><g><title>&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="245" width="0.5522%" height="15" fill="rgb(235,182,43)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="229" width="0.5522%" height="15" fill="rgb(242,16,51)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="213" width="0.5522%" height="15" fill="rgb(248,9,4)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="197" width="0.5522%" height="15" fill="rgb(210,31,22)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="181" width="0.5522%" height="15" fill="rgb(239,54,39)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="165" width="0.5522%" height="15" fill="rgb(230,99,41)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="175.50"></text></g><g><title>par_matvec::sparse_dense_impl::simple::reduce_workspaces_rayon::_{{closure}} (1,235,350,808 samples, 0.55%)</title><rect x="4.3785%" y="149" width="0.5522%" height="15" fill="rgb(253,106,12)" fg:x="9795379845" fg:w="1235350808"/><text x="4.6285%" y="159.50"></text></g><g><title>faer::row::rowref::&lt;impl faer::row::generic::Row&lt;Inner&gt;&gt;::sum (1,113,275,568 samples, 0.50%)</title><rect x="4.4330%" y="133" width="0.4976%" height="15" fill="rgb(213,46,41)" fg:x="9917455085" fg:w="1113275568"/><text x="4.6830%" y="143.50"></text></g><g><title>faer::mat::matref::&lt;impl faer::mat::generic::Mat&lt;Inner&gt;&gt;::sum (1,113,275,568 samples, 0.50%)</title><rect x="4.4330%" y="117" width="0.4976%" height="15" fill="rgb(215,133,35)" fg:x="9917455085" fg:w="1113275568"/><text x="4.6830%" y="127.50"></text></g><g><title>faer::linalg::reductions::sum::sum (1,113,275,568 samples, 0.50%)</title><rect x="4.4330%" y="101" width="0.4976%" height="15" fill="rgb(213,28,5)" fg:x="9917455085" fg:w="1113275568"/><text x="4.6830%" y="111.50"></text></g><g><title>faer_traits::math_utils::add (1,018,689,680 samples, 0.46%)</title><rect x="4.4753%" y="85" width="0.4553%" height="15" fill="rgb(215,77,49)" fg:x="10012040973" fg:w="1018689680"/><text x="4.7253%" y="95.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (1,018,689,680 samples, 0.46%)</title><rect x="4.4753%" y="69" width="0.4553%" height="15" fill="rgb(248,100,22)" fg:x="10012040973" fg:w="1018689680"/><text x="4.7253%" y="79.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (1,018,689,680 samples, 0.46%)</title><rect x="4.4753%" y="53" width="0.4553%" height="15" fill="rgb(208,67,9)" fg:x="10012040973" fg:w="1018689680"/><text x="4.7253%" y="63.50"></text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (1,018,689,680 samples, 0.46%)</title><rect x="4.4753%" y="37" width="0.4553%" height="15" fill="rgb(219,133,21)" fg:x="10012040973" fg:w="1018689680"/><text x="4.7253%" y="47.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24,077,454 samples, 0.01%)</title><rect x="4.9432%" y="837" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="11058814499" fg:w="24077454"/><text x="5.1932%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (24,077,454 samples, 0.01%)</title><rect x="4.9432%" y="821" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="11058814499" fg:w="24077454"/><text x="5.1932%" y="831.50"></text></g><g><title>rayon_core::registry::Registry::pop_injected_job (88,491,102 samples, 0.04%)</title><rect x="4.9307%" y="869" width="0.0396%" height="15" fill="rgb(252,136,11)" fg:x="11030730653" fg:w="88491102"/><text x="5.1807%" y="879.50"></text></g><g><title>crossbeam_deque::deque::Injector&lt;T&gt;::steal (80,426,647 samples, 0.04%)</title><rect x="4.9343%" y="853" width="0.0360%" height="15" fill="rgb(219,138,53)" fg:x="11038795108" fg:w="80426647"/><text x="5.1843%" y="863.50"></text></g><g><title>core::sync::atomic::fence (36,329,802 samples, 0.02%)</title><rect x="4.9540%" y="837" width="0.0162%" height="15" fill="rgb(211,51,23)" fg:x="11082891953" fg:w="36329802"/><text x="5.2040%" y="847.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="725" width="0.0113%" height="15" fill="rgb(247,221,28)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="735.50"></text></g><g><title>crossbeam_epoch::default::with_handle (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="709" width="0.0113%" height="15" fill="rgb(251,222,45)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="693" width="0.0113%" height="15" fill="rgb(217,162,53)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="677" width="0.0113%" height="15" fill="rgb(229,93,14)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="687.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="661" width="0.0113%" height="15" fill="rgb(209,67,49)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="671.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (25,237,729 samples, 0.01%)</title><rect x="5.0340%" y="645" width="0.0113%" height="15" fill="rgb(213,87,29)" fg:x="11261829578" fg:w="25237729"/><text x="5.2840%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25,694,602 samples, 0.01%)</title><rect x="5.0452%" y="677" width="0.0115%" height="15" fill="rgb(205,151,52)" fg:x="11287067307" fg:w="25694602"/><text x="5.2952%" y="687.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (25,694,602 samples, 0.01%)</title><rect x="5.0452%" y="661" width="0.0115%" height="15" fill="rgb(253,215,39)" fg:x="11287067307" fg:w="25694602"/><text x="5.2952%" y="671.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (25,694,602 samples, 0.01%)</title><rect x="5.0452%" y="645" width="0.0115%" height="15" fill="rgb(221,220,41)" fg:x="11287067307" fg:w="25694602"/><text x="5.2952%" y="655.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (191,963,368 samples, 0.09%)</title><rect x="5.0817%" y="613" width="0.0858%" height="15" fill="rgb(218,133,21)" fg:x="11368640361" fg:w="191963368"/><text x="5.3317%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (191,963,368 samples, 0.09%)</title><rect x="5.0817%" y="597" width="0.0858%" height="15" fill="rgb(221,193,43)" fg:x="11368640361" fg:w="191963368"/><text x="5.3317%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (191,963,368 samples, 0.09%)</title><rect x="5.0817%" y="581" width="0.0858%" height="15" fill="rgb(240,128,52)" fg:x="11368640361" fg:w="191963368"/><text x="5.3317%" y="591.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (33,513,811 samples, 0.01%)</title><rect x="5.1675%" y="613" width="0.0150%" height="15" fill="rgb(253,114,12)" fg:x="11560603729" fg:w="33513811"/><text x="5.4175%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (33,513,811 samples, 0.01%)</title><rect x="5.1675%" y="597" width="0.0150%" height="15" fill="rgb(215,223,47)" fg:x="11560603729" fg:w="33513811"/><text x="5.4175%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (33,513,811 samples, 0.01%)</title><rect x="5.1675%" y="581" width="0.0150%" height="15" fill="rgb(248,225,23)" fg:x="11560603729" fg:w="33513811"/><text x="5.4175%" y="591.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (23,570,290 samples, 0.01%)</title><rect x="5.1945%" y="581" width="0.0105%" height="15" fill="rgb(250,108,0)" fg:x="11620921860" fg:w="23570290"/><text x="5.4445%" y="591.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (39,658,123 samples, 0.02%)</title><rect x="5.2050%" y="581" width="0.0177%" height="15" fill="rgb(228,208,7)" fg:x="11644492150" fg:w="39658123"/><text x="5.4550%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39,658,123 samples, 0.02%)</title><rect x="5.2050%" y="565" width="0.0177%" height="15" fill="rgb(244,45,10)" fg:x="11644492150" fg:w="39658123"/><text x="5.4550%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (39,658,123 samples, 0.02%)</title><rect x="5.2050%" y="549" width="0.0177%" height="15" fill="rgb(207,125,25)" fg:x="11644492150" fg:w="39658123"/><text x="5.4550%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (83,006,727 samples, 0.04%)</title><rect x="5.1870%" y="597" width="0.0371%" height="15" fill="rgb(210,195,18)" fg:x="11604293347" fg:w="83006727"/><text x="5.4370%" y="607.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (116,211,527 samples, 0.05%)</title><rect x="5.1861%" y="613" width="0.0519%" height="15" fill="rgb(249,80,12)" fg:x="11602277246" fg:w="116211527"/><text x="5.4361%" y="623.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (31,188,699 samples, 0.01%)</title><rect x="5.2241%" y="597" width="0.0139%" height="15" fill="rgb(221,65,9)" fg:x="11687300074" fg:w="31188699"/><text x="5.4741%" y="607.50"></text></g><g><title>[libc.so.6] (31,188,699 samples, 0.01%)</title><rect x="5.2241%" y="581" width="0.0139%" height="15" fill="rgb(235,49,36)" fg:x="11687300074" fg:w="31188699"/><text x="5.4741%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (532,612,706 samples, 0.24%)</title><rect x="5.0008%" y="773" width="0.2381%" height="15" fill="rgb(225,32,20)" fg:x="11187660643" fg:w="532612706"/><text x="5.2508%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (532,612,706 samples, 0.24%)</title><rect x="5.0008%" y="757" width="0.2381%" height="15" fill="rgb(215,141,46)" fg:x="11187660643" fg:w="532612706"/><text x="5.2508%" y="767.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (509,220,866 samples, 0.23%)</title><rect x="5.0113%" y="741" width="0.2276%" height="15" fill="rgb(250,160,47)" fg:x="11211052483" fg:w="509220866"/><text x="5.2613%" y="751.50"></text></g><g><title>crossbeam_epoch::default::pin (433,206,042 samples, 0.19%)</title><rect x="5.0452%" y="725" width="0.1936%" height="15" fill="rgb(216,222,40)" fg:x="11287067307" fg:w="433206042"/><text x="5.2952%" y="735.50"></text></g><g><title>crossbeam_epoch::default::with_handle (433,206,042 samples, 0.19%)</title><rect x="5.0452%" y="709" width="0.1936%" height="15" fill="rgb(234,217,39)" fg:x="11287067307" fg:w="433206042"/><text x="5.2952%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (433,206,042 samples, 0.19%)</title><rect x="5.0452%" y="693" width="0.1936%" height="15" fill="rgb(207,178,40)" fg:x="11287067307" fg:w="433206042"/><text x="5.2952%" y="703.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (407,511,440 samples, 0.18%)</title><rect x="5.0567%" y="677" width="0.1822%" height="15" fill="rgb(221,136,13)" fg:x="11312761909" fg:w="407511440"/><text x="5.3067%" y="687.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (407,511,440 samples, 0.18%)</title><rect x="5.0567%" y="661" width="0.1822%" height="15" fill="rgb(249,199,10)" fg:x="11312761909" fg:w="407511440"/><text x="5.3067%" y="671.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (407,511,440 samples, 0.18%)</title><rect x="5.0567%" y="645" width="0.1822%" height="15" fill="rgb(249,222,13)" fg:x="11312761909" fg:w="407511440"/><text x="5.3067%" y="655.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (407,511,440 samples, 0.18%)</title><rect x="5.0567%" y="629" width="0.1822%" height="15" fill="rgb(244,185,38)" fg:x="11312761909" fg:w="407511440"/><text x="5.3067%" y="639.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (548,363,422 samples, 0.25%)</title><rect x="4.9964%" y="789" width="0.2451%" height="15" fill="rgb(236,202,9)" fg:x="11177838367" fg:w="548363422"/><text x="5.2464%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::guard::Guard&gt; (27,378,112 samples, 0.01%)</title><rect x="5.2836%" y="709" width="0.0122%" height="15" fill="rgb(250,229,37)" fg:x="11820231870" fg:w="27378112"/><text x="5.5336%" y="719.50"></text></g><g><title>&lt;crossbeam_epoch::guard::Guard as core::ops::drop::Drop&gt;::drop (27,378,112 samples, 0.01%)</title><rect x="5.2836%" y="693" width="0.0122%" height="15" fill="rgb(206,174,23)" fg:x="11820231870" fg:w="27378112"/><text x="5.5336%" y="703.50"></text></g><g><title>crossbeam_epoch::internal::Local::unpin (27,378,112 samples, 0.01%)</title><rect x="5.2836%" y="677" width="0.0122%" height="15" fill="rgb(211,33,43)" fg:x="11820231870" fg:w="27378112"/><text x="5.5336%" y="687.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (30,736,355 samples, 0.01%)</title><rect x="5.3024%" y="709" width="0.0137%" height="15" fill="rgb(245,58,50)" fg:x="11862372977" fg:w="30736355"/><text x="5.5524%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (30,736,355 samples, 0.01%)</title><rect x="5.3024%" y="693" width="0.0137%" height="15" fill="rgb(244,68,36)" fg:x="11862372977" fg:w="30736355"/><text x="5.5524%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30,736,355 samples, 0.01%)</title><rect x="5.3024%" y="677" width="0.0137%" height="15" fill="rgb(232,229,15)" fg:x="11862372977" fg:w="30736355"/><text x="5.5524%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28,177,984 samples, 0.01%)</title><rect x="5.3035%" y="661" width="0.0126%" height="15" fill="rgb(254,30,23)" fg:x="11864931348" fg:w="28177984"/><text x="5.5535%" y="671.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::_{{constant}}::_{{closure}} (28,177,984 samples, 0.01%)</title><rect x="5.3035%" y="645" width="0.0126%" height="15" fill="rgb(235,160,14)" fg:x="11864931348" fg:w="28177984"/><text x="5.5535%" y="655.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (28,177,984 samples, 0.01%)</title><rect x="5.3035%" y="629" width="0.0126%" height="15" fill="rgb(212,155,44)" fg:x="11864931348" fg:w="28177984"/><text x="5.5535%" y="639.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (254,519,199 samples, 0.11%)</title><rect x="5.3560%" y="597" width="0.1138%" height="15" fill="rgb(226,2,50)" fg:x="11982358052" fg:w="254519199"/><text x="5.6060%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (254,519,199 samples, 0.11%)</title><rect x="5.3560%" y="581" width="0.1138%" height="15" fill="rgb(234,177,6)" fg:x="11982358052" fg:w="254519199"/><text x="5.6060%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (254,519,199 samples, 0.11%)</title><rect x="5.3560%" y="565" width="0.1138%" height="15" fill="rgb(217,24,9)" fg:x="11982358052" fg:w="254519199"/><text x="5.6060%" y="575.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (35,580,043 samples, 0.02%)</title><rect x="5.4698%" y="597" width="0.0159%" height="15" fill="rgb(220,13,46)" fg:x="12236877251" fg:w="35580043"/><text x="5.7198%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (35,580,043 samples, 0.02%)</title><rect x="5.4698%" y="581" width="0.0159%" height="15" fill="rgb(239,221,27)" fg:x="12236877251" fg:w="35580043"/><text x="5.7198%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (35,580,043 samples, 0.02%)</title><rect x="5.4698%" y="565" width="0.0159%" height="15" fill="rgb(222,198,25)" fg:x="12236877251" fg:w="35580043"/><text x="5.7198%" y="575.50"></text></g><g><title>crossbeam_epoch::atomic::Atomic&lt;T&gt;::load (32,609,825 samples, 0.01%)</title><rect x="5.4922%" y="549" width="0.0146%" height="15" fill="rgb(211,99,13)" fg:x="12286975515" fg:w="32609825"/><text x="5.7422%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32,609,825 samples, 0.01%)</title><rect x="5.4922%" y="533" width="0.0146%" height="15" fill="rgb(232,111,31)" fg:x="12286975515" fg:w="32609825"/><text x="5.7422%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (32,609,825 samples, 0.01%)</title><rect x="5.4922%" y="517" width="0.0146%" height="15" fill="rgb(245,82,37)" fg:x="12286975515" fg:w="32609825"/><text x="5.7422%" y="527.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,413,953 samples, 0.02%)</title><rect x="5.4909%" y="565" width="0.0163%" height="15" fill="rgb(227,149,46)" fg:x="12284156941" fg:w="36413953"/><text x="5.7409%" y="575.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (32,702,282 samples, 0.01%)</title><rect x="5.5103%" y="565" width="0.0146%" height="15" fill="rgb(218,36,50)" fg:x="12327545721" fg:w="32702282"/><text x="5.7603%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32,702,282 samples, 0.01%)</title><rect x="5.5103%" y="549" width="0.0146%" height="15" fill="rgb(226,80,48)" fg:x="12327545721" fg:w="32702282"/><text x="5.7603%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (32,702,282 samples, 0.01%)</title><rect x="5.5103%" y="533" width="0.0146%" height="15" fill="rgb(238,224,15)" fg:x="12327545721" fg:w="32702282"/><text x="5.7603%" y="543.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (79,610,815 samples, 0.04%)</title><rect x="5.4903%" y="581" width="0.0356%" height="15" fill="rgb(241,136,10)" fg:x="12282797165" fg:w="79610815"/><text x="5.7403%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (129,269,778 samples, 0.06%)</title><rect x="5.4886%" y="597" width="0.0578%" height="15" fill="rgb(208,32,45)" fg:x="12279034735" fg:w="129269778"/><text x="5.7386%" y="607.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::try_pop_if (45,896,533 samples, 0.02%)</title><rect x="5.5259%" y="581" width="0.0205%" height="15" fill="rgb(207,135,9)" fg:x="12362407980" fg:w="45896533"/><text x="5.7759%" y="591.50"></text></g><g><title>[libc.so.6] (45,896,533 samples, 0.02%)</title><rect x="5.5259%" y="565" width="0.0205%" height="15" fill="rgb(206,86,44)" fg:x="12362407980" fg:w="45896533"/><text x="5.7759%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (662,784,915 samples, 0.30%)</title><rect x="5.2530%" y="757" width="0.2963%" height="15" fill="rgb(245,177,15)" fg:x="11751765075" fg:w="662784915"/><text x="5.5030%" y="767.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (662,784,915 samples, 0.30%)</title><rect x="5.2530%" y="741" width="0.2963%" height="15" fill="rgb(206,64,50)" fg:x="11751765075" fg:w="662784915"/><text x="5.5030%" y="751.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (634,163,353 samples, 0.28%)</title><rect x="5.2658%" y="725" width="0.2835%" height="15" fill="rgb(234,36,40)" fg:x="11780386637" fg:w="634163353"/><text x="5.5158%" y="735.50"></text></g><g><title>crossbeam_epoch::default::pin (521,440,658 samples, 0.23%)</title><rect x="5.3161%" y="709" width="0.2331%" height="15" fill="rgb(213,64,8)" fg:x="11893109332" fg:w="521440658"/><text x="5.5661%" y="719.50"></text></g><g><title>crossbeam_epoch::default::with_handle (521,440,658 samples, 0.23%)</title><rect x="5.3161%" y="693" width="0.2331%" height="15" fill="rgb(210,75,36)" fg:x="11893109332" fg:w="521440658"/><text x="5.5661%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (521,440,658 samples, 0.23%)</title><rect x="5.3161%" y="677" width="0.2331%" height="15" fill="rgb(229,88,21)" fg:x="11893109332" fg:w="521440658"/><text x="5.5661%" y="687.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (499,584,837 samples, 0.22%)</title><rect x="5.3259%" y="661" width="0.2233%" height="15" fill="rgb(252,204,47)" fg:x="11914965153" fg:w="499584837"/><text x="5.5759%" y="671.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (499,584,837 samples, 0.22%)</title><rect x="5.3259%" y="645" width="0.2233%" height="15" fill="rgb(208,77,27)" fg:x="11914965153" fg:w="499584837"/><text x="5.5759%" y="655.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (499,584,837 samples, 0.22%)</title><rect x="5.3259%" y="629" width="0.2233%" height="15" fill="rgb(221,76,26)" fg:x="11914965153" fg:w="499584837"/><text x="5.5759%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (499,584,837 samples, 0.22%)</title><rect x="5.3259%" y="613" width="0.2233%" height="15" fill="rgb(225,139,18)" fg:x="11914965153" fg:w="499584837"/><text x="5.5759%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,298,689,759 samples, 0.58%)</title><rect x="4.9725%" y="853" width="0.5805%" height="15" fill="rgb(230,137,11)" fg:x="11124283651" fg:w="1298689759"/><text x="5.2225%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,298,689,759 samples, 0.58%)</title><rect x="4.9725%" y="837" width="0.5805%" height="15" fill="rgb(212,28,1)" fg:x="11124283651" fg:w="1298689759"/><text x="5.2225%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,292,468,895 samples, 0.58%)</title><rect x="4.9753%" y="821" width="0.5777%" height="15" fill="rgb(248,164,17)" fg:x="11130504515" fg:w="1292468895"/><text x="5.2253%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,277,410,799 samples, 0.57%)</title><rect x="4.9820%" y="805" width="0.5710%" height="15" fill="rgb(222,171,42)" fg:x="11145562611" fg:w="1277410799"/><text x="5.2320%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (686,771,333 samples, 0.31%)</title><rect x="5.2460%" y="789" width="0.3070%" height="15" fill="rgb(243,84,45)" fg:x="11736202077" fg:w="686771333"/><text x="5.4960%" y="799.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (686,771,333 samples, 0.31%)</title><rect x="5.2460%" y="773" width="0.3070%" height="15" fill="rgb(252,49,23)" fg:x="11736202077" fg:w="686771333"/><text x="5.4960%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,405,114,691 samples, 0.63%)</title><rect x="4.9307%" y="901" width="0.6281%" height="15" fill="rgb(215,19,7)" fg:x="11030730653" fg:w="1405114691"/><text x="5.1807%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work::_{{closure}} (1,405,114,691 samples, 0.63%)</title><rect x="4.9307%" y="885" width="0.6281%" height="15" fill="rgb(238,81,41)" fg:x="11030730653" fg:w="1405114691"/><text x="5.1807%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (1,316,623,589 samples, 0.59%)</title><rect x="4.9702%" y="869" width="0.5885%" height="15" fill="rgb(210,199,37)" fg:x="11119221755" fg:w="1316623589"/><text x="5.2202%" y="879.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (36,028,320 samples, 0.02%)</title><rect x="5.5696%" y="869" width="0.0161%" height="15" fill="rgb(244,192,49)" fg:x="12460143894" fg:w="36028320"/><text x="5.8196%" y="879.50"></text></g><g><title>crossbeam_epoch::default::with_handle (36,028,320 samples, 0.02%)</title><rect x="5.5696%" y="853" width="0.0161%" height="15" fill="rgb(226,211,11)" fg:x="12460143894" fg:w="36028320"/><text x="5.8196%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36,028,320 samples, 0.02%)</title><rect x="5.5696%" y="837" width="0.0161%" height="15" fill="rgb(236,162,54)" fg:x="12460143894" fg:w="36028320"/><text x="5.8196%" y="847.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_exchange (45,270,560 samples, 0.02%)</title><rect x="5.5922%" y="757" width="0.0202%" height="15" fill="rgb(220,229,9)" fg:x="12510793336" fg:w="45270560"/><text x="5.8422%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (45,270,560 samples, 0.02%)</title><rect x="5.5922%" y="741" width="0.0202%" height="15" fill="rgb(250,87,22)" fg:x="12510793336" fg:w="45270560"/><text x="5.8422%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45,270,560 samples, 0.02%)</title><rect x="5.5922%" y="725" width="0.0202%" height="15" fill="rgb(239,43,17)" fg:x="12510793336" fg:w="45270560"/><text x="5.8422%" y="735.50"></text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::load (38,818,229 samples, 0.02%)</title><rect x="5.6125%" y="757" width="0.0174%" height="15" fill="rgb(231,177,25)" fg:x="12556063896" fg:w="38818229"/><text x="5.8625%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38,818,229 samples, 0.02%)</title><rect x="5.6125%" y="741" width="0.0174%" height="15" fill="rgb(219,179,1)" fg:x="12556063896" fg:w="38818229"/><text x="5.8625%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (38,818,229 samples, 0.02%)</title><rect x="5.6125%" y="725" width="0.0174%" height="15" fill="rgb(238,219,53)" fg:x="12556063896" fg:w="38818229"/><text x="5.8625%" y="735.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (23,652,041 samples, 0.01%)</title><rect x="5.6298%" y="757" width="0.0106%" height="15" fill="rgb(232,167,36)" fg:x="12594882125" fg:w="23652041"/><text x="5.8798%" y="767.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (182,284,308 samples, 0.08%)</title><rect x="5.5595%" y="885" width="0.0815%" height="15" fill="rgb(244,19,51)" fg:x="12437617731" fg:w="182284308"/><text x="5.8095%" y="895.50"></text></g><g><title>crossbeam_epoch::default::pin (123,729,825 samples, 0.06%)</title><rect x="5.5857%" y="869" width="0.0553%" height="15" fill="rgb(224,6,22)" fg:x="12496172214" fg:w="123729825"/><text x="5.8357%" y="879.50"></text></g><g><title>crossbeam_epoch::default::with_handle (123,729,825 samples, 0.06%)</title><rect x="5.5857%" y="853" width="0.0553%" height="15" fill="rgb(224,145,5)" fg:x="12496172214" fg:w="123729825"/><text x="5.8357%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (123,729,825 samples, 0.06%)</title><rect x="5.5857%" y="837" width="0.0553%" height="15" fill="rgb(234,130,49)" fg:x="12496172214" fg:w="123729825"/><text x="5.8357%" y="847.50"></text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (122,837,519 samples, 0.05%)</title><rect x="5.5861%" y="821" width="0.0549%" height="15" fill="rgb(254,6,2)" fg:x="12497064520" fg:w="122837519"/><text x="5.8361%" y="831.50"></text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (122,837,519 samples, 0.05%)</title><rect x="5.5861%" y="805" width="0.0549%" height="15" fill="rgb(208,96,46)" fg:x="12497064520" fg:w="122837519"/><text x="5.8361%" y="815.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (122,837,519 samples, 0.05%)</title><rect x="5.5861%" y="789" width="0.0549%" height="15" fill="rgb(239,3,39)" fg:x="12497064520" fg:w="122837519"/><text x="5.8361%" y="799.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (122,837,519 samples, 0.05%)</title><rect x="5.5861%" y="773" width="0.0549%" height="15" fill="rgb(233,210,1)" fg:x="12497064520" fg:w="122837519"/><text x="5.8361%" y="783.50"></text></g><g><title>rayon_core::registry::WorkerThread::find_work (1,611,087,411 samples, 0.72%)</title><rect x="4.9307%" y="917" width="0.7201%" height="15" fill="rgb(244,137,37)" fg:x="11030730653" fg:w="1611087411"/><text x="5.1807%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (205,972,720 samples, 0.09%)</title><rect x="5.5587%" y="901" width="0.0921%" height="15" fill="rgb(240,136,2)" fg:x="12435845344" fg:w="205972720"/><text x="5.8087%" y="911.50"></text></g><g><title>__sched_yield (89,800,400 samples, 0.04%)</title><rect x="5.6666%" y="901" width="0.0401%" height="15" fill="rgb(239,18,37)" fg:x="12677155196" fg:w="89800400"/><text x="5.9166%" y="911.50"></text></g><g><title>[unknown] (28,388,661 samples, 0.01%)</title><rect x="5.6941%" y="885" width="0.0127%" height="15" fill="rgb(218,185,22)" fg:x="12738566935" fg:w="28388661"/><text x="5.9441%" y="895.50"></text></g><g><title>std::sync::poison::condvar::Condvar::wait (29,732,722 samples, 0.01%)</title><rect x="5.7232%" y="885" width="0.0133%" height="15" fill="rgb(225,218,4)" fg:x="12803824167" fg:w="29732722"/><text x="5.9732%" y="895.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (60,793,327 samples, 0.03%)</title><rect x="5.7102%" y="901" width="0.0272%" height="15" fill="rgb(230,182,32)" fg:x="12774633571" fg:w="60793327"/><text x="5.9602%" y="911.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (188,233,004 samples, 0.08%)</title><rect x="5.6540%" y="917" width="0.0841%" height="15" fill="rgb(242,56,43)" fg:x="12648939941" fg:w="188233004"/><text x="5.9040%" y="927.50"></text></g><g><title>core::hint::spin_loop (46,560,463 samples, 0.02%)</title><rect x="5.7479%" y="805" width="0.0208%" height="15" fill="rgb(233,99,24)" fg:x="12859082258" fg:w="46560463"/><text x="5.9979%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (46,560,463 samples, 0.02%)</title><rect x="5.7479%" y="789" width="0.0208%" height="15" fill="rgb(234,209,42)" fg:x="12859082258" fg:w="46560463"/><text x="5.9979%" y="799.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="1013" width="5.6900%" height="15" fill="rgb(227,7,12)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="1023.50">&lt;rayon_..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="997" width="5.6900%" height="15" fill="rgb(245,203,43)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="1007.50">rayon_c..</text></g><g><title>rayon_core::registry::main_loop (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="981" width="5.6900%" height="15" fill="rgb(238,205,33)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="991.50">rayon_c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_out_of_work (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="965" width="5.6900%" height="15" fill="rgb(231,56,7)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="975.50">rayon_c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="949" width="5.6900%" height="15" fill="rgb(244,186,29)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="959.50">rayon_c..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12,729,426,121 samples, 5.69%)</title><rect x="0.0837%" y="933" width="5.6900%" height="15" fill="rgb(234,111,31)" fg:x="187300061" fg:w="12729426121"/><text x="0.3337%" y="943.50">rayon_c..</text></g><g><title>rayon_core::sleep::Sleep::work_found (79,553,237 samples, 0.04%)</title><rect x="5.7381%" y="917" width="0.0356%" height="15" fill="rgb(241,149,10)" fg:x="12837172945" fg:w="79553237"/><text x="5.9881%" y="927.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_any_threads (79,553,237 samples, 0.04%)</title><rect x="5.7381%" y="901" width="0.0356%" height="15" fill="rgb(249,206,44)" fg:x="12837172945" fg:w="79553237"/><text x="5.9881%" y="911.50"></text></g><g><title>rayon_core::sleep::Sleep::wake_specific_thread (79,553,237 samples, 0.04%)</title><rect x="5.7381%" y="885" width="0.0356%" height="15" fill="rgb(251,153,30)" fg:x="12837172945" fg:w="79553237"/><text x="5.9881%" y="895.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (72,963,773 samples, 0.03%)</title><rect x="5.7411%" y="869" width="0.0326%" height="15" fill="rgb(239,152,38)" fg:x="12843762409" fg:w="72963773"/><text x="5.9911%" y="879.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (72,963,773 samples, 0.03%)</title><rect x="5.7411%" y="853" width="0.0326%" height="15" fill="rgb(249,139,47)" fg:x="12843762409" fg:w="72963773"/><text x="5.9911%" y="863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (65,623,692 samples, 0.03%)</title><rect x="5.7444%" y="837" width="0.0293%" height="15" fill="rgb(244,64,35)" fg:x="12851102490" fg:w="65623692"/><text x="5.9944%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (57,643,924 samples, 0.03%)</title><rect x="5.7479%" y="821" width="0.0258%" height="15" fill="rgb(216,46,15)" fg:x="12859082258" fg:w="57643924"/><text x="5.9979%" y="831.50"></text></g><g><title>&lt;faer::col::generic::Col&lt;Inner&gt; as core::ops::index::Index&lt;&lt;Rows as faer::ShapeIdx&gt;::Idx&lt;usize&gt;&gt;&gt;::index (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="997" width="0.0285%" height="15" fill="rgb(250,74,19)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="1007.50"></text></g><g><title>faer::col::colref::&lt;impl faer::col::generic::Col&lt;faer::col::colref::Ref&lt;T,Rows,RStride&gt;&gt;&gt;::at (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="981" width="0.0285%" height="15" fill="rgb(249,42,33)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="991.50"></text></g><g><title>&lt;&amp;&amp;equator::structures::Finalize&lt;E&gt; as equator::traits::Expr&gt;::eval_expr (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="965" width="0.0285%" height="15" fill="rgb(242,149,17)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="975.50"></text></g><g><title>&lt;equator::expr::CmpExpr&lt;&amp;equator::spec::by_val::CmpByValWrapper&lt;equator::spec::sized::CmpSizedWrapper&lt;equator::spec::debug::CmpDebugWrapper&lt;C&gt;&gt;&gt;,&amp;Lhs3,&amp;Rhs3&gt; as equator::traits::Expr&gt;::eval_expr (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="949" width="0.0285%" height="15" fill="rgb(244,29,21)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="959.50"></text></g><g><title>&lt;equator::Lt as equator::Cmp&lt;Lhs,Rhs&gt;&gt;::test (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="933" width="0.0285%" height="15" fill="rgb(220,130,37)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (63,686,621 samples, 0.03%)</title><rect x="6.0971%" y="917" width="0.0285%" height="15" fill="rgb(211,67,2)" fg:x="13640308091" fg:w="63686621"/><text x="6.3471%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (264,268,047 samples, 0.12%)</title><rect x="6.1346%" y="965" width="0.1181%" height="15" fill="rgb(235,68,52)" fg:x="13724244657" fg:w="264268047"/><text x="6.3846%" y="975.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (500,149,456 samples, 0.22%)</title><rect x="6.1256%" y="997" width="0.2236%" height="15" fill="rgb(246,142,3)" fg:x="13703994712" fg:w="500149456"/><text x="6.3756%" y="1007.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (500,149,456 samples, 0.22%)</title><rect x="6.1256%" y="981" width="0.2236%" height="15" fill="rgb(241,25,7)" fg:x="13703994712" fg:w="500149456"/><text x="6.3756%" y="991.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::is_empty (215,631,464 samples, 0.10%)</title><rect x="6.2528%" y="965" width="0.0964%" height="15" fill="rgb(242,119,39)" fg:x="13988512704" fg:w="215631464"/><text x="6.5028%" y="975.50"></text></g><g><title>&lt;Lhs as faer_traits::AddByRef&lt;Rhs&gt;&gt;::add_by_ref (38,572,027,703 samples, 17.24%)</title><rect x="64.2535%" y="981" width="17.2414%" height="15" fill="rgb(241,98,45)" fg:x="143745859349" fg:w="38572027703"/><text x="64.5035%" y="991.50">&lt;Lhs as faer_traits::AddByR..</text></g><g><title>&lt;&amp;f64 as core::ops::arith::Add&gt;::add (38,572,027,703 samples, 17.24%)</title><rect x="64.2535%" y="965" width="17.2414%" height="15" fill="rgb(254,28,30)" fg:x="143745859349" fg:w="38572027703"/><text x="64.5035%" y="975.50">&lt;&amp;f64 as core::ops::arith::..</text></g><g><title>&lt;f64 as core::ops::arith::Add&gt;::add (38,572,027,703 samples, 17.24%)</title><rect x="64.2535%" y="949" width="17.2414%" height="15" fill="rgb(241,142,54)" fg:x="143745859349" fg:w="38572027703"/><text x="64.5035%" y="959.50">&lt;f64 as core::ops::arith::A..</text></g><g><title>&lt;Lhs as faer_traits::MulByRef&lt;Rhs&gt;&gt;::mul_by_ref (1,041,052,303 samples, 0.47%)</title><rect x="81.4949%" y="981" width="0.4653%" height="15" fill="rgb(222,85,15)" fg:x="182317887052" fg:w="1041052303"/><text x="81.7449%" y="991.50"></text></g><g><title>&lt;&amp;f64 as core::ops::arith::Mul&gt;::mul (1,041,052,303 samples, 0.47%)</title><rect x="81.4949%" y="965" width="0.4653%" height="15" fill="rgb(210,85,47)" fg:x="182317887052" fg:w="1041052303"/><text x="81.7449%" y="975.50"></text></g><g><title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1,041,052,303 samples, 0.47%)</title><rect x="81.4949%" y="949" width="0.4653%" height="15" fill="rgb(224,206,25)" fg:x="182317887052" fg:w="1041052303"/><text x="81.7449%" y="959.50"></text></g><g><title>&lt;faer::col::generic::Col&lt;Inner&gt; as core::ops::index::Index&lt;&lt;Rows as faer::ShapeIdx&gt;::Idx&lt;usize&gt;&gt;&gt;::index (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="981" width="7.1358%" height="15" fill="rgb(243,201,19)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="991.50">&lt;faer::col..</text></g><g><title>faer::col::colref::&lt;impl faer::col::generic::Col&lt;faer::col::colref::Ref&lt;T,Rows,RStride&gt;&gt;&gt;::at (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="965" width="7.1358%" height="15" fill="rgb(236,59,4)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="975.50">faer::col:..</text></g><g><title>&lt;&amp;&amp;equator::structures::Finalize&lt;E&gt; as equator::traits::Expr&gt;::eval_expr (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="949" width="7.1358%" height="15" fill="rgb(254,179,45)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="959.50">&lt;&amp;&amp;equator..</text></g><g><title>&lt;equator::expr::CmpExpr&lt;&amp;equator::spec::by_val::CmpByValWrapper&lt;equator::spec::sized::CmpSizedWrapper&lt;equator::spec::debug::CmpDebugWrapper&lt;C&gt;&gt;&gt;,&amp;Lhs3,&amp;Rhs3&gt; as equator::traits::Expr&gt;::eval_expr (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="933" width="7.1358%" height="15" fill="rgb(226,14,10)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="943.50">&lt;equator::..</text></g><g><title>&lt;equator::Lt as equator::Cmp&lt;Lhs,Rhs&gt;&gt;::test (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="917" width="7.1358%" height="15" fill="rgb(244,27,41)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="927.50">&lt;equator::..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (15,964,008,429 samples, 7.14%)</title><rect x="81.9602%" y="901" width="7.1358%" height="15" fill="rgb(235,35,32)" fg:x="183358939355" fg:w="15964008429"/><text x="82.2102%" y="911.50">core::cmp:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (214,664,479,615 samples, 95.95%)</title><rect x="0.0584%" y="1157" width="95.9536%" height="15" fill="rgb(218,68,31)" fg:x="130612176" fg:w="214664479615"/><text x="0.3084%" y="1167.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (214,654,280,682 samples, 95.95%)</title><rect x="0.0629%" y="1141" width="95.9491%" height="15" fill="rgb(207,120,37)" fg:x="140811109" fg:w="214654280682"/><text x="0.3129%" y="1151.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (214,654,280,682 samples, 95.95%)</title><rect x="0.0629%" y="1125" width="95.9491%" height="15" fill="rgb(227,98,0)" fg:x="140811109" fg:w="214654280682"/><text x="0.3129%" y="1135.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1109" width="95.9283%" height="15" fill="rgb(207,7,3)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1093" width="95.9283%" height="15" fill="rgb(206,98,19)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1103.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1077" width="95.9283%" height="15" fill="rgb(217,5,26)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1087.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1061" width="95.9283%" height="15" fill="rgb(235,190,38)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1071.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1045" width="95.9283%" height="15" fill="rgb(247,86,24)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1055.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (214,607,791,730 samples, 95.93%)</title><rect x="0.0837%" y="1029" width="95.9283%" height="15" fill="rgb(205,101,16)" fg:x="187300061" fg:w="214607791730"/><text x="0.3337%" y="1039.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>par_matvec::sparse_dense_impl::simple::par_sparse_dense::_{{closure}}::_{{closure}} (201,878,365,609 samples, 90.24%)</title><rect x="5.7737%" y="1013" width="90.2383%" height="15" fill="rgb(246,168,33)" fg:x="12916726182" fg:w="201878365609"/><text x="6.0237%" y="1023.50">par_matvec::sparse_dense_impl::simple::par_sparse_dense::_{{closure}}::_{{closure}}</text></g><g><title>par_matvec::sparse_dense_impl::simple::hot_loop (200,590,947,623 samples, 89.66%)</title><rect x="6.3492%" y="997" width="89.6628%" height="15" fill="rgb(231,114,1)" fg:x="14204144168" fg:w="200590947623"/><text x="6.5992%" y="1007.50">par_matvec::sparse_dense_impl::simple::hot_loop</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15,472,144,007 samples, 6.92%)</title><rect x="89.0961%" y="981" width="6.9159%" height="15" fill="rgb(207,184,53)" fg:x="199322947784" fg:w="15472144007"/><text x="89.3461%" y="991.50">core::ite..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15,472,144,007 samples, 6.92%)</title><rect x="89.0961%" y="965" width="6.9159%" height="15" fill="rgb(224,95,51)" fg:x="199322947784" fg:w="15472144007"/><text x="89.3461%" y="975.50">&lt;core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (214,671,236,435 samples, 95.96%)</title><rect x="0.0584%" y="1173" width="95.9566%" height="15" fill="rgb(212,188,45)" fg:x="130612176" fg:w="214671236435"/><text x="0.3084%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>[libc.so.6] (214,759,315,440 samples, 96.00%)</title><rect x="0.0245%" y="1221" width="95.9960%" height="15" fill="rgb(223,154,38)" fg:x="54835341" fg:w="214759315440"/><text x="0.2745%" y="1231.50">[libc.so.6]</text></g><g><title>[libc.so.6] (214,759,315,440 samples, 96.00%)</title><rect x="0.0245%" y="1205" width="95.9960%" height="15" fill="rgb(251,22,52)" fg:x="54835341" fg:w="214759315440"/><text x="0.2745%" y="1215.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (214,683,538,605 samples, 95.96%)</title><rect x="0.0584%" y="1189" width="95.9621%" height="15" fill="rgb(229,209,22)" fg:x="130612176" fg:w="214683538605"/><text x="0.3084%" y="1199.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (35,372,740 samples, 0.02%)</title><rect x="96.4191%" y="1205" width="0.0158%" height="15" fill="rgb(234,138,34)" fg:x="215705885919" fg:w="35372740"/><text x="96.6691%" y="1215.50"></text></g><g><title>crossbeam_epoch::default::pin (32,587,085 samples, 0.01%)</title><rect x="96.4204%" y="1189" width="0.0146%" height="15" fill="rgb(212,95,11)" fg:x="215708671574" fg:w="32587085"/><text x="96.6704%" y="1199.50"></text></g><g><title>matrix_market_rs::parse_coords_val (24,805,953 samples, 0.01%)</title><rect x="96.4386%" y="1189" width="0.0111%" height="15" fill="rgb(240,179,47)" fg:x="215749443486" fg:w="24805953"/><text x="96.6886%" y="1199.50"></text></g><g><title>matrix_market_rs::parse_sparse_coo (37,225,713 samples, 0.02%)</title><rect x="96.4386%" y="1205" width="0.0166%" height="15" fill="rgb(240,163,11)" fg:x="215749443486" fg:w="37225713"/><text x="96.6886%" y="1215.50"></text></g><g><title>[unknown] (1,010,843,433 samples, 0.45%)</title><rect x="96.0205%" y="1221" width="0.4518%" height="15" fill="rgb(236,37,12)" fg:x="214814150781" fg:w="1010843433"/><text x="96.2705%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (39,816,929 samples, 0.02%)</title><rect x="96.4734%" y="757" width="0.0178%" height="15" fill="rgb(232,164,16)" fg:x="215827419716" fg:w="39816929"/><text x="96.7234%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (39,816,929 samples, 0.02%)</title><rect x="96.4734%" y="741" width="0.0178%" height="15" fill="rgb(244,205,15)" fg:x="215827419716" fg:w="39816929"/><text x="96.7234%" y="751.50"></text></g><g><title>core::ptr::write (39,816,929 samples, 0.02%)</title><rect x="96.4734%" y="725" width="0.0178%" height="15" fill="rgb(223,117,47)" fg:x="215827419716" fg:w="39816929"/><text x="96.7234%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (69,177,632 samples, 0.03%)</title><rect x="96.4734%" y="773" width="0.0309%" height="15" fill="rgb(244,107,35)" fg:x="215827419716" fg:w="69177632"/><text x="96.7234%" y="783.50"></text></g><g><title>par_matvec::test_utils::FaerLoader::load_from_matrix_market::_{{closure}} (29,360,703 samples, 0.01%)</title><rect x="96.4912%" y="757" width="0.0131%" height="15" fill="rgb(205,140,8)" fg:x="215867236645" fg:w="29360703"/><text x="96.7412%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="933" width="0.0358%" height="15" fill="rgb(228,84,46)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="917" width="0.0358%" height="15" fill="rgb(254,188,9)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="901" width="0.0358%" height="15" fill="rgb(206,112,54)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="885" width="0.0358%" height="15" fill="rgb(216,84,49)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="869" width="0.0358%" height="15" fill="rgb(214,194,35)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="853" width="0.0358%" height="15" fill="rgb(249,28,3)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="837" width="0.0358%" height="15" fill="rgb(222,56,52)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="821" width="0.0358%" height="15" fill="rgb(245,217,50)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="805" width="0.0358%" height="15" fill="rgb(213,201,24)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (80,131,213 samples, 0.04%)</title><rect x="96.4734%" y="789" width="0.0358%" height="15" fill="rgb(248,116,28)" fg:x="215827419716" fg:w="80131213"/><text x="96.7234%" y="799.50"></text></g><g><title>faer::sparse::csc::&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::new_from_argsort_impl (259,886,507 samples, 0.12%)</title><rect x="96.5093%" y="917" width="0.1162%" height="15" fill="rgb(219,72,43)" fg:x="215907550929" fg:w="259886507"/><text x="96.7593%" y="927.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (234,787,639 samples, 0.10%)</title><rect x="96.5205%" y="901" width="0.1049%" height="15" fill="rgb(209,138,14)" fg:x="215932649797" fg:w="234787639"/><text x="96.7705%" y="911.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for f64&gt;::clone (213,686,651 samples, 0.10%)</title><rect x="96.5299%" y="885" width="0.0955%" height="15" fill="rgb(222,18,33)" fg:x="215953750785" fg:w="213686651"/><text x="96.7799%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::ne (163,514,723 samples, 0.07%)</title><rect x="96.6688%" y="901" width="0.0731%" height="15" fill="rgb(213,199,7)" fg:x="216264429703" fg:w="163514723"/><text x="96.9188%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (51,522,563 samples, 0.02%)</title><rect x="96.7658%" y="789" width="0.0230%" height="15" fill="rgb(250,110,10)" fg:x="216481433564" fg:w="51522563"/><text x="97.0158%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::__chaining_lt (26,240,151 samples, 0.01%)</title><rect x="96.7771%" y="773" width="0.0117%" height="15" fill="rgb(248,123,6)" fg:x="216506715976" fg:w="26240151"/><text x="97.0271%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (194,048,724 samples, 0.09%)</title><rect x="96.7458%" y="853" width="0.0867%" height="15" fill="rgb(206,91,31)" fg:x="216436791717" fg:w="194048724"/><text x="96.9958%" y="863.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (194,048,724 samples, 0.09%)</title><rect x="96.7458%" y="837" width="0.0867%" height="15" fill="rgb(211,154,13)" fg:x="216436791717" fg:w="194048724"/><text x="96.9958%" y="847.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (189,759,223 samples, 0.08%)</title><rect x="96.7477%" y="821" width="0.0848%" height="15" fill="rgb(225,148,7)" fg:x="216441081218" fg:w="189759223"/><text x="96.9977%" y="831.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (149,406,877 samples, 0.07%)</title><rect x="96.7658%" y="805" width="0.0668%" height="15" fill="rgb(220,160,43)" fg:x="216481433564" fg:w="149406877"/><text x="97.0158%" y="815.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (97,884,314 samples, 0.04%)</title><rect x="96.7888%" y="789" width="0.0438%" height="15" fill="rgb(213,52,39)" fg:x="216532956127" fg:w="97884314"/><text x="97.0388%" y="799.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (79,220,593 samples, 0.04%)</title><rect x="96.7972%" y="773" width="0.0354%" height="15" fill="rgb(243,137,7)" fg:x="216551619848" fg:w="79220593"/><text x="97.0472%" y="783.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (65,805,098 samples, 0.03%)</title><rect x="96.8442%" y="773" width="0.0294%" height="15" fill="rgb(230,79,13)" fg:x="216656959308" fg:w="65805098"/><text x="97.0942%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::__chaining_lt (47,815,270 samples, 0.02%)</title><rect x="96.8523%" y="757" width="0.0214%" height="15" fill="rgb(247,105,23)" fg:x="216674949136" fg:w="47815270"/><text x="97.1023%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (257,068,045 samples, 0.11%)</title><rect x="96.8364%" y="837" width="0.1149%" height="15" fill="rgb(223,179,41)" fg:x="216639411883" fg:w="257068045"/><text x="97.0864%" y="847.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (257,068,045 samples, 0.11%)</title><rect x="96.8364%" y="821" width="0.1149%" height="15" fill="rgb(218,9,34)" fg:x="216639411883" fg:w="257068045"/><text x="97.0864%" y="831.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (257,068,045 samples, 0.11%)</title><rect x="96.8364%" y="805" width="0.1149%" height="15" fill="rgb(222,106,8)" fg:x="216639411883" fg:w="257068045"/><text x="97.0864%" y="815.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (239,520,620 samples, 0.11%)</title><rect x="96.8442%" y="789" width="0.1071%" height="15" fill="rgb(211,220,0)" fg:x="216656959308" fg:w="239520620"/><text x="97.0942%" y="799.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (173,715,522 samples, 0.08%)</title><rect x="96.8737%" y="773" width="0.0776%" height="15" fill="rgb(229,52,16)" fg:x="216722764406" fg:w="173715522"/><text x="97.1237%" y="783.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (169,636,247 samples, 0.08%)</title><rect x="96.8755%" y="757" width="0.0758%" height="15" fill="rgb(212,155,18)" fg:x="216726843681" fg:w="169636247"/><text x="97.1255%" y="767.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (61,006,855 samples, 0.03%)</title><rect x="96.9651%" y="757" width="0.0273%" height="15" fill="rgb(242,21,14)" fg:x="216927230754" fg:w="61006855"/><text x="97.2151%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::__chaining_lt (30,260,099 samples, 0.01%)</title><rect x="96.9788%" y="741" width="0.0135%" height="15" fill="rgb(222,19,48)" fg:x="216957977510" fg:w="30260099"/><text x="97.2288%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (300,020,604 samples, 0.13%)</title><rect x="96.9513%" y="821" width="0.1341%" height="15" fill="rgb(232,45,27)" fg:x="216896479928" fg:w="300020604"/><text x="97.2013%" y="831.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (300,020,604 samples, 0.13%)</title><rect x="96.9513%" y="805" width="0.1341%" height="15" fill="rgb(249,103,42)" fg:x="216896479928" fg:w="300020604"/><text x="97.2013%" y="815.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (300,020,604 samples, 0.13%)</title><rect x="96.9513%" y="789" width="0.1341%" height="15" fill="rgb(246,81,33)" fg:x="216896479928" fg:w="300020604"/><text x="97.2013%" y="799.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (269,269,778 samples, 0.12%)</title><rect x="96.9651%" y="773" width="0.1204%" height="15" fill="rgb(252,33,42)" fg:x="216927230754" fg:w="269269778"/><text x="97.2151%" y="783.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (208,262,923 samples, 0.09%)</title><rect x="96.9923%" y="757" width="0.0931%" height="15" fill="rgb(209,212,41)" fg:x="216988237609" fg:w="208262923"/><text x="97.2423%" y="767.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (181,732,637 samples, 0.08%)</title><rect x="97.0042%" y="741" width="0.0812%" height="15" fill="rgb(207,154,6)" fg:x="217014767895" fg:w="181732637"/><text x="97.2542%" y="751.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (26,068,300 samples, 0.01%)</title><rect x="97.1088%" y="741" width="0.0117%" height="15" fill="rgb(223,64,47)" fg:x="217248729454" fg:w="26068300"/><text x="97.3588%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (226,112,256 samples, 0.10%)</title><rect x="97.0874%" y="805" width="0.1011%" height="15" fill="rgb(211,161,38)" fg:x="217200876707" fg:w="226112256"/><text x="97.3374%" y="815.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (226,112,256 samples, 0.10%)</title><rect x="97.0874%" y="789" width="0.1011%" height="15" fill="rgb(219,138,40)" fg:x="217200876707" fg:w="226112256"/><text x="97.3374%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (226,112,256 samples, 0.10%)</title><rect x="97.0874%" y="773" width="0.1011%" height="15" fill="rgb(241,228,46)" fg:x="217200876707" fg:w="226112256"/><text x="97.3374%" y="783.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (187,002,690 samples, 0.08%)</title><rect x="97.1049%" y="757" width="0.0836%" height="15" fill="rgb(223,209,38)" fg:x="217239986273" fg:w="187002690"/><text x="97.3549%" y="767.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (152,191,209 samples, 0.07%)</title><rect x="97.1204%" y="741" width="0.0680%" height="15" fill="rgb(236,164,45)" fg:x="217274797754" fg:w="152191209"/><text x="97.3704%" y="751.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (122,141,989 samples, 0.05%)</title><rect x="97.1338%" y="725" width="0.0546%" height="15" fill="rgb(231,15,5)" fg:x="217304846974" fg:w="122141989"/><text x="97.3838%" y="735.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (34,584,347 samples, 0.02%)</title><rect x="97.2116%" y="725" width="0.0155%" height="15" fill="rgb(252,35,15)" fg:x="217478737866" fg:w="34584347"/><text x="97.4616%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (160,276,760 samples, 0.07%)</title><rect x="97.1962%" y="789" width="0.0716%" height="15" fill="rgb(248,181,18)" fg:x="217444302038" fg:w="160276760"/><text x="97.4462%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (160,276,760 samples, 0.07%)</title><rect x="97.1962%" y="773" width="0.0716%" height="15" fill="rgb(233,39,42)" fg:x="217444302038" fg:w="160276760"/><text x="97.4462%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (160,276,760 samples, 0.07%)</title><rect x="97.1962%" y="757" width="0.0716%" height="15" fill="rgb(238,110,33)" fg:x="217444302038" fg:w="160276760"/><text x="97.4462%" y="767.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (130,202,846 samples, 0.06%)</title><rect x="97.2096%" y="741" width="0.0582%" height="15" fill="rgb(233,195,10)" fg:x="217474375952" fg:w="130202846"/><text x="97.4596%" y="751.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (91,256,585 samples, 0.04%)</title><rect x="97.2270%" y="725" width="0.0408%" height="15" fill="rgb(254,105,3)" fg:x="217513322213" fg:w="91256585"/><text x="97.4770%" y="735.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (69,496,120 samples, 0.03%)</title><rect x="97.2368%" y="709" width="0.0311%" height="15" fill="rgb(221,225,9)" fg:x="217535082678" fg:w="69496120"/><text x="97.4868%" y="719.50"></text></g><g><title>core::intrinsics::copy (26,313,348 samples, 0.01%)</title><rect x="97.2873%" y="725" width="0.0118%" height="15" fill="rgb(224,227,45)" fg:x="217648139131" fg:w="26313348"/><text x="97.5373%" y="735.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (30,352,350 samples, 0.01%)</title><rect x="97.3107%" y="709" width="0.0136%" height="15" fill="rgb(229,198,43)" fg:x="217700411886" fg:w="30352350"/><text x="97.5607%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (169,283,035 samples, 0.08%)</title><rect x="97.2775%" y="773" width="0.0757%" height="15" fill="rgb(206,209,35)" fg:x="217626290033" fg:w="169283035"/><text x="97.5275%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (169,283,035 samples, 0.08%)</title><rect x="97.2775%" y="757" width="0.0757%" height="15" fill="rgb(245,195,53)" fg:x="217626290033" fg:w="169283035"/><text x="97.5275%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (169,283,035 samples, 0.08%)</title><rect x="97.2775%" y="741" width="0.0757%" height="15" fill="rgb(240,92,26)" fg:x="217626290033" fg:w="169283035"/><text x="97.5275%" y="751.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (121,120,589 samples, 0.05%)</title><rect x="97.2991%" y="725" width="0.0541%" height="15" fill="rgb(207,40,23)" fg:x="217674452479" fg:w="121120589"/><text x="97.5491%" y="735.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (64,808,832 samples, 0.03%)</title><rect x="97.3242%" y="709" width="0.0290%" height="15" fill="rgb(223,111,35)" fg:x="217730764236" fg:w="64808832"/><text x="97.5742%" y="719.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (52,038,431 samples, 0.02%)</title><rect x="97.3299%" y="693" width="0.0233%" height="15" fill="rgb(229,147,28)" fg:x="217743534637" fg:w="52038431"/><text x="97.5799%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (25,739,704 samples, 0.01%)</title><rect x="97.3552%" y="757" width="0.0115%" height="15" fill="rgb(211,29,28)" fg:x="217799946691" fg:w="25739704"/><text x="97.6052%" y="767.50"></text></g><g><title>core::intrinsics::copy (30,623,396 samples, 0.01%)</title><rect x="97.3765%" y="709" width="0.0137%" height="15" fill="rgb(228,72,33)" fg:x="217847654877" fg:w="30623396"/><text x="97.6265%" y="719.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (43,753,538 samples, 0.02%)</title><rect x="97.3940%" y="693" width="0.0196%" height="15" fill="rgb(205,214,31)" fg:x="217886951714" fg:w="43753538"/><text x="97.6440%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (135,308,371 samples, 0.06%)</title><rect x="97.3667%" y="757" width="0.0605%" height="15" fill="rgb(224,111,15)" fg:x="217825686395" fg:w="135308371"/><text x="97.6167%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (135,308,371 samples, 0.06%)</title><rect x="97.3667%" y="741" width="0.0605%" height="15" fill="rgb(253,21,26)" fg:x="217825686395" fg:w="135308371"/><text x="97.6167%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (130,874,395 samples, 0.06%)</title><rect x="97.3686%" y="725" width="0.0585%" height="15" fill="rgb(245,139,43)" fg:x="217830120371" fg:w="130874395"/><text x="97.6186%" y="735.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (82,716,493 samples, 0.04%)</title><rect x="97.3902%" y="709" width="0.0370%" height="15" fill="rgb(252,170,7)" fg:x="217878278273" fg:w="82716493"/><text x="97.6402%" y="719.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (30,289,514 samples, 0.01%)</title><rect x="97.4136%" y="693" width="0.0135%" height="15" fill="rgb(231,118,14)" fg:x="217930705252" fg:w="30289514"/><text x="97.6636%" y="703.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (25,910,842 samples, 0.01%)</title><rect x="97.4156%" y="677" width="0.0116%" height="15" fill="rgb(238,83,0)" fg:x="217935083924" fg:w="25910842"/><text x="97.6656%" y="687.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (55,931,485 samples, 0.03%)</title><rect x="97.4349%" y="741" width="0.0250%" height="15" fill="rgb(221,39,39)" fg:x="217978348236" fg:w="55931485"/><text x="97.6849%" y="751.50"></text></g><g><title>core::intrinsics::copy (26,123,462 samples, 0.01%)</title><rect x="97.4696%" y="693" width="0.0117%" height="15" fill="rgb(222,119,46)" fg:x="218056083763" fg:w="26123462"/><text x="97.7196%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (34,603,787 samples, 0.02%)</title><rect x="97.4949%" y="677" width="0.0155%" height="15" fill="rgb(222,165,49)" fg:x="218112690360" fg:w="34603787"/><text x="97.7449%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (169,442,209 samples, 0.08%)</title><rect x="97.4599%" y="741" width="0.0757%" height="15" fill="rgb(219,113,52)" fg:x="218034279721" fg:w="169442209"/><text x="97.7099%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (169,442,209 samples, 0.08%)</title><rect x="97.4599%" y="725" width="0.0757%" height="15" fill="rgb(214,7,15)" fg:x="218034279721" fg:w="169442209"/><text x="97.7099%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (169,442,209 samples, 0.08%)</title><rect x="97.4599%" y="709" width="0.0757%" height="15" fill="rgb(235,32,4)" fg:x="218034279721" fg:w="169442209"/><text x="97.7099%" y="719.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (121,514,705 samples, 0.05%)</title><rect x="97.4813%" y="693" width="0.0543%" height="15" fill="rgb(238,90,54)" fg:x="218082207225" fg:w="121514705"/><text x="97.7313%" y="703.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (56,427,783 samples, 0.03%)</title><rect x="97.5104%" y="677" width="0.0252%" height="15" fill="rgb(213,208,19)" fg:x="218147294147" fg:w="56427783"/><text x="97.7604%" y="687.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (30,390,376 samples, 0.01%)</title><rect x="97.5221%" y="661" width="0.0136%" height="15" fill="rgb(233,156,4)" fg:x="218173331554" fg:w="30390376"/><text x="97.7721%" y="671.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (39,097,538 samples, 0.02%)</title><rect x="97.5415%" y="725" width="0.0175%" height="15" fill="rgb(207,194,5)" fg:x="218216847476" fg:w="39097538"/><text x="97.7915%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::__chaining_lt (39,609,624 samples, 0.02%)</title><rect x="97.5861%" y="645" width="0.0177%" height="15" fill="rgb(206,111,30)" fg:x="218316534459" fg:w="39609624"/><text x="97.8361%" y="655.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (56,894,749 samples, 0.03%)</title><rect x="97.5803%" y="661" width="0.0254%" height="15" fill="rgb(243,70,54)" fg:x="218303591836" fg:w="56894749"/><text x="97.8303%" y="671.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (148,020,379 samples, 0.07%)</title><rect x="97.5590%" y="725" width="0.0662%" height="15" fill="rgb(242,28,8)" fg:x="218255945014" fg:w="148020379"/><text x="97.8090%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (148,020,379 samples, 0.07%)</title><rect x="97.5590%" y="709" width="0.0662%" height="15" fill="rgb(219,106,18)" fg:x="218255945014" fg:w="148020379"/><text x="97.8090%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (148,020,379 samples, 0.07%)</title><rect x="97.5590%" y="693" width="0.0662%" height="15" fill="rgb(244,222,10)" fg:x="218255945014" fg:w="148020379"/><text x="97.8090%" y="703.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (113,292,456 samples, 0.05%)</title><rect x="97.5745%" y="677" width="0.0506%" height="15" fill="rgb(236,179,52)" fg:x="218290672937" fg:w="113292456"/><text x="97.8245%" y="687.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (43,478,808 samples, 0.02%)</title><rect x="97.6057%" y="661" width="0.0194%" height="15" fill="rgb(213,23,39)" fg:x="218360486585" fg:w="43478808"/><text x="97.8557%" y="671.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (30,388,940 samples, 0.01%)</title><rect x="97.6116%" y="645" width="0.0136%" height="15" fill="rgb(238,48,10)" fg:x="218373576453" fg:w="30388940"/><text x="97.8616%" y="655.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (73,537,866 samples, 0.03%)</title><rect x="97.6271%" y="709" width="0.0329%" height="15" fill="rgb(251,196,23)" fg:x="218408339303" fg:w="73537866"/><text x="97.8771%" y="719.50"></text></g><g><title>core::slice::sort::shared::smallsort::sort9_optimal (34,232,599 samples, 0.02%)</title><rect x="97.6447%" y="693" width="0.0153%" height="15" fill="rgb(250,152,24)" fg:x="218447644570" fg:w="34232599"/><text x="97.8947%" y="703.50"></text></g><g><title>core::slice::sort::shared::smallsort::swap_if_less (34,232,599 samples, 0.02%)</title><rect x="97.6447%" y="677" width="0.0153%" height="15" fill="rgb(209,150,17)" fg:x="218447644570" fg:w="34232599"/><text x="97.8947%" y="687.50"></text></g><g><title>core::intrinsics::copy (29,983,093 samples, 0.01%)</title><rect x="97.6619%" y="661" width="0.0134%" height="15" fill="rgb(234,202,34)" fg:x="218486150220" fg:w="29983093"/><text x="97.9119%" y="671.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (V,U,T)&gt;::lt (34,695,029 samples, 0.02%)</title><rect x="97.6889%" y="645" width="0.0155%" height="15" fill="rgb(253,148,53)" fg:x="218546596975" fg:w="34695029"/><text x="97.9389%" y="655.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (146,842,922 samples, 0.07%)</title><rect x="97.6600%" y="709" width="0.0656%" height="15" fill="rgb(218,129,16)" fg:x="218481877169" fg:w="146842922"/><text x="97.9100%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (146,842,922 samples, 0.07%)</title><rect x="97.6600%" y="693" width="0.0656%" height="15" fill="rgb(216,85,19)" fg:x="218481877169" fg:w="146842922"/><text x="97.9100%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (146,842,922 samples, 0.07%)</title><rect x="97.6600%" y="677" width="0.0656%" height="15" fill="rgb(235,228,7)" fg:x="218481877169" fg:w="146842922"/><text x="97.9100%" y="687.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (112,586,778 samples, 0.05%)</title><rect x="97.6753%" y="661" width="0.0503%" height="15" fill="rgb(245,175,0)" fg:x="218516133313" fg:w="112586778"/><text x="97.9253%" y="671.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (47,428,087 samples, 0.02%)</title><rect x="97.7044%" y="645" width="0.0212%" height="15" fill="rgb(208,168,36)" fg:x="218581292004" fg:w="47428087"/><text x="97.9544%" y="655.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (30,270,876 samples, 0.01%)</title><rect x="97.7121%" y="629" width="0.0135%" height="15" fill="rgb(246,171,24)" fg:x="218598449215" fg:w="30270876"/><text x="97.9621%" y="639.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (61,356,230 samples, 0.03%)</title><rect x="97.7332%" y="693" width="0.0274%" height="15" fill="rgb(215,142,24)" fg:x="218645621941" fg:w="61356230"/><text x="97.9832%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (78,223,207 samples, 0.03%)</title><rect x="97.7606%" y="693" width="0.0350%" height="15" fill="rgb(250,187,7)" fg:x="218706978171" fg:w="78223207"/><text x="98.0106%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (78,223,207 samples, 0.03%)</title><rect x="97.7606%" y="677" width="0.0350%" height="15" fill="rgb(228,66,33)" fg:x="218706978171" fg:w="78223207"/><text x="98.0106%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (73,853,307 samples, 0.03%)</title><rect x="97.7625%" y="661" width="0.0330%" height="15" fill="rgb(234,215,21)" fg:x="218711348071" fg:w="73853307"/><text x="98.0125%" y="671.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (60,769,922 samples, 0.03%)</title><rect x="97.7684%" y="645" width="0.0272%" height="15" fill="rgb(222,191,20)" fg:x="218724431456" fg:w="60769922"/><text x="98.0184%" y="655.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_network (34,869,358 samples, 0.02%)</title><rect x="97.7976%" y="677" width="0.0156%" height="15" fill="rgb(245,79,54)" fg:x="218789736127" fg:w="34869358"/><text x="98.0476%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition (60,928,386 samples, 0.03%)</title><rect x="97.8132%" y="677" width="0.0272%" height="15" fill="rgb(240,10,37)" fg:x="218824605485" fg:w="60928386"/><text x="98.0632%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic (60,928,386 samples, 0.03%)</title><rect x="97.8132%" y="661" width="0.0272%" height="15" fill="rgb(214,192,32)" fg:x="218824605485" fg:w="60928386"/><text x="98.0632%" y="671.50"></text></g><g><title>core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::_{{closure}} (60,928,386 samples, 0.03%)</title><rect x="97.8132%" y="645" width="0.0272%" height="15" fill="rgb(209,36,54)" fg:x="218824605485" fg:w="60928386"/><text x="98.0632%" y="655.50"></text></g><g><title>core::slice::_&lt;impl [T]&gt;::sort_unstable_by_key::_{{closure}} (47,684,348 samples, 0.02%)</title><rect x="97.8191%" y="629" width="0.0213%" height="15" fill="rgb(220,10,11)" fg:x="218837849523" fg:w="47684348"/><text x="98.0691%" y="639.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl::_{{closure}} (25,930,238 samples, 0.01%)</title><rect x="97.8288%" y="613" width="0.0116%" height="15" fill="rgb(221,106,17)" fg:x="218859603633" fg:w="25930238"/><text x="98.0788%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (2,531,971,532 samples, 1.13%)</title><rect x="96.7458%" y="901" width="1.1318%" height="15" fill="rgb(251,142,44)" fg:x="216436791717" fg:w="2531971532"/><text x="96.9958%" y="911.50"></text></g><g><title>core::slice::sort::unstable::sort (2,531,971,532 samples, 1.13%)</title><rect x="96.7458%" y="885" width="1.1318%" height="15" fill="rgb(238,13,15)" fg:x="216436791717" fg:w="2531971532"/><text x="96.9958%" y="895.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (2,531,971,532 samples, 1.13%)</title><rect x="96.7458%" y="869" width="1.1318%" height="15" fill="rgb(208,107,27)" fg:x="216436791717" fg:w="2531971532"/><text x="96.9958%" y="879.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (2,337,922,808 samples, 1.05%)</title><rect x="96.8326%" y="853" width="1.0450%" height="15" fill="rgb(205,136,37)" fg:x="216630840441" fg:w="2337922808"/><text x="97.0826%" y="863.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (2,072,283,321 samples, 0.93%)</title><rect x="96.9513%" y="837" width="0.9263%" height="15" fill="rgb(250,205,27)" fg:x="216896479928" fg:w="2072283321"/><text x="97.2013%" y="847.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,772,262,717 samples, 0.79%)</title><rect x="97.0854%" y="821" width="0.7922%" height="15" fill="rgb(210,80,43)" fg:x="217196500532" fg:w="1772262717"/><text x="97.3354%" y="831.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,541,774,286 samples, 0.69%)</title><rect x="97.1884%" y="805" width="0.6892%" height="15" fill="rgb(247,160,36)" fg:x="217426988963" fg:w="1541774286"/><text x="97.4384%" y="815.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,364,184,451 samples, 0.61%)</title><rect x="97.2678%" y="789" width="0.6098%" height="15" fill="rgb(234,13,49)" fg:x="217604578798" fg:w="1364184451"/><text x="97.5178%" y="799.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,173,190,181 samples, 0.52%)</title><rect x="97.3532%" y="773" width="0.5244%" height="15" fill="rgb(234,122,0)" fg:x="217795573068" fg:w="1173190181"/><text x="97.6032%" y="783.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (1,007,768,483 samples, 0.45%)</title><rect x="97.4271%" y="757" width="0.4505%" height="15" fill="rgb(207,146,38)" fg:x="217960994766" fg:w="1007768483"/><text x="97.6771%" y="767.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (765,041,319 samples, 0.34%)</title><rect x="97.5356%" y="741" width="0.3420%" height="15" fill="rgb(207,177,25)" fg:x="218203721930" fg:w="765041319"/><text x="97.7856%" y="751.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (564,797,856 samples, 0.25%)</title><rect x="97.6251%" y="725" width="0.2525%" height="15" fill="rgb(211,178,42)" fg:x="218403965393" fg:w="564797856"/><text x="97.8751%" y="735.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (340,043,158 samples, 0.15%)</title><rect x="97.7256%" y="709" width="0.1520%" height="15" fill="rgb(230,69,54)" fg:x="218628720091" fg:w="340043158"/><text x="97.9756%" y="719.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (183,561,871 samples, 0.08%)</title><rect x="97.7956%" y="693" width="0.0821%" height="15" fill="rgb(214,135,41)" fg:x="218785201378" fg:w="183561871"/><text x="98.0456%" y="703.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (83,229,378 samples, 0.04%)</title><rect x="97.8404%" y="677" width="0.0372%" height="15" fill="rgb(237,67,25)" fg:x="218885533871" fg:w="83229378"/><text x="98.0904%" y="687.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (57,341,475 samples, 0.03%)</title><rect x="97.8520%" y="661" width="0.0256%" height="15" fill="rgb(222,189,50)" fg:x="218911421774" fg:w="57341475"/><text x="98.1020%" y="671.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (22,389,319 samples, 0.01%)</title><rect x="97.8676%" y="645" width="0.0100%" height="15" fill="rgb(245,148,34)" fg:x="218946373930" fg:w="22389319"/><text x="98.1176%" y="655.50"></text></g><g><title>faer::sparse::csc::_&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets::_{{closure}} (216,685,123 samples, 0.10%)</title><rect x="97.8816%" y="901" width="0.0969%" height="15" fill="rgb(222,29,6)" fg:x="218977599402" fg:w="216685123"/><text x="98.1316%" y="911.50"></text></g><g><title>faer::sparse::csc::&lt;impl faer::sparse::csc::numeric::generic::SparseColMat&lt;faer::sparse::csc::numeric::Own&lt;I,T,Rows,Cols&gt;&gt;&gt;::try_new_from_triplets (3,322,351,131 samples, 1.49%)</title><rect x="96.5093%" y="933" width="1.4851%" height="15" fill="rgb(221,189,43)" fg:x="215907550929" fg:w="3322351131"/><text x="96.7593%" y="943.50"></text></g><g><title>faer::sparse::csc::&lt;impl faer::sparse::csc::symbolic::generic::SymbolicSparseColMat&lt;faer::sparse::csc::symbolic::Own&lt;I,Rows,Cols&gt;&gt;&gt;::try_new_from_indices_impl (3,062,464,624 samples, 1.37%)</title><rect x="96.6254%" y="917" width="1.3689%" height="15" fill="rgb(207,36,27)" fg:x="216167437436" fg:w="3062464624"/><text x="96.8754%" y="927.50"></text></g><g><title>faer::sparse::try_zeroed (23,054,039 samples, 0.01%)</title><rect x="97.9840%" y="901" width="0.0103%" height="15" fill="rgb(217,90,24)" fg:x="219206848021" fg:w="23054039"/><text x="98.2340%" y="911.50"></text></g><g><title>core::intrinsics::write_bytes (23,054,039 samples, 0.01%)</title><rect x="97.9840%" y="885" width="0.0103%" height="15" fill="rgb(224,66,35)" fg:x="219206848021" fg:w="23054039"/><text x="98.2340%" y="895.50"></text></g><g><title>[libc.so.6] (23,054,039 samples, 0.01%)</title><rect x="97.9840%" y="869" width="0.0103%" height="15" fill="rgb(221,13,50)" fg:x="219206848021" fg:w="23054039"/><text x="98.2340%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (37,268,028 samples, 0.02%)</title><rect x="97.9977%" y="901" width="0.0167%" height="15" fill="rgb(236,68,49)" fg:x="219237364643" fg:w="37268028"/><text x="98.2477%" y="911.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (323,912,391 samples, 0.14%)</title><rect x="98.0660%" y="725" width="0.1448%" height="15" fill="rgb(229,146,28)" fg:x="219390244834" fg:w="323912391"/><text x="98.3160%" y="735.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (323,912,391 samples, 0.14%)</title><rect x="98.0660%" y="709" width="0.1448%" height="15" fill="rgb(225,31,38)" fg:x="219390244834" fg:w="323912391"/><text x="98.3160%" y="719.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (323,912,391 samples, 0.14%)</title><rect x="98.0660%" y="693" width="0.1448%" height="15" fill="rgb(250,208,3)" fg:x="219390244834" fg:w="323912391"/><text x="98.3160%" y="703.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (323,912,391 samples, 0.14%)</title><rect x="98.0660%" y="677" width="0.1448%" height="15" fill="rgb(246,54,23)" fg:x="219390244834" fg:w="323912391"/><text x="98.3160%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (768,509,474 samples, 0.34%)</title><rect x="98.0605%" y="885" width="0.3435%" height="15" fill="rgb(243,76,11)" fg:x="219377998116" fg:w="768509474"/><text x="98.3105%" y="895.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (768,509,474 samples, 0.34%)</title><rect x="98.0605%" y="869" width="0.3435%" height="15" fill="rgb(245,21,50)" fg:x="219377998116" fg:w="768509474"/><text x="98.3105%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (768,509,474 samples, 0.34%)</title><rect x="98.0605%" y="853" width="0.3435%" height="15" fill="rgb(228,9,43)" fg:x="219377998116" fg:w="768509474"/><text x="98.3105%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (768,509,474 samples, 0.34%)</title><rect x="98.0605%" y="837" width="0.3435%" height="15" fill="rgb(208,100,47)" fg:x="219377998116" fg:w="768509474"/><text x="98.3105%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (768,509,474 samples, 0.34%)</title><rect x="98.0605%" y="821" width="0.3435%" height="15" fill="rgb(232,26,8)" fg:x="219377998116" fg:w="768509474"/><text x="98.3105%" y="831.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (756,262,756 samples, 0.34%)</title><rect x="98.0660%" y="805" width="0.3380%" height="15" fill="rgb(216,166,38)" fg:x="219390244834" fg:w="756262756"/><text x="98.3160%" y="815.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (756,262,756 samples, 0.34%)</title><rect x="98.0660%" y="789" width="0.3380%" height="15" fill="rgb(251,202,51)" fg:x="219390244834" fg:w="756262756"/><text x="98.3160%" y="799.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (756,262,756 samples, 0.34%)</title><rect x="98.0660%" y="773" width="0.3380%" height="15" fill="rgb(254,216,34)" fg:x="219390244834" fg:w="756262756"/><text x="98.3160%" y="783.50"></text></g><g><title>core::str::pattern::Searcher::next_match (756,262,756 samples, 0.34%)</title><rect x="98.0660%" y="757" width="0.3380%" height="15" fill="rgb(251,32,27)" fg:x="219390244834" fg:w="756262756"/><text x="98.3160%" y="767.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (756,262,756 samples, 0.34%)</title><rect x="98.0660%" y="741" width="0.3380%" height="15" fill="rgb(208,127,28)" fg:x="219390244834" fg:w="756262756"/><text x="98.3160%" y="751.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (432,350,365 samples, 0.19%)</title><rect x="98.2108%" y="725" width="0.1933%" height="15" fill="rgb(224,137,22)" fg:x="219714157225" fg:w="432350365"/><text x="98.4608%" y="735.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (432,350,365 samples, 0.19%)</title><rect x="98.2108%" y="709" width="0.1933%" height="15" fill="rgb(254,70,32)" fg:x="219714157225" fg:w="432350365"/><text x="98.4608%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (432,350,365 samples, 0.19%)</title><rect x="98.2108%" y="693" width="0.1933%" height="15" fill="rgb(229,75,37)" fg:x="219714157225" fg:w="432350365"/><text x="98.4608%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33,227,365 samples, 0.01%)</title><rect x="98.3892%" y="677" width="0.0149%" height="15" fill="rgb(252,64,23)" fg:x="220113280225" fg:w="33227365"/><text x="98.6392%" y="687.50"></text></g><g><title>core::num::dec2flt::decimal::Decimal::try_fast_path (37,264,762 samples, 0.02%)</title><rect x="98.4484%" y="821" width="0.0167%" height="15" fill="rgb(232,162,48)" fg:x="220245770971" fg:w="37264762"/><text x="98.6984%" y="831.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::parse_digits (104,229,371 samples, 0.05%)</title><rect x="98.5185%" y="773" width="0.0466%" height="15" fill="rgb(246,160,12)" fg:x="220402535852" fg:w="104229371"/><text x="98.7685%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_first (79,198,921 samples, 0.04%)</title><rect x="98.5297%" y="757" width="0.0354%" height="15" fill="rgb(247,166,0)" fg:x="220427566302" fg:w="79198921"/><text x="98.7797%" y="767.50"></text></g><g><title>&lt;[u8] as core::num::dec2flt::common::ByteSlice&gt;::read_u64 (33,148,605 samples, 0.01%)</title><rect x="98.5651%" y="773" width="0.0148%" height="15" fill="rgb(249,219,21)" fg:x="220506765223" fg:w="33148605"/><text x="98.8151%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (33,148,605 samples, 0.01%)</title><rect x="98.5651%" y="757" width="0.0148%" height="15" fill="rgb(205,209,3)" fg:x="220506765223" fg:w="33148605"/><text x="98.8151%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33,148,605 samples, 0.01%)</title><rect x="98.5651%" y="741" width="0.0148%" height="15" fill="rgb(243,44,1)" fg:x="220506765223" fg:w="33148605"/><text x="98.8151%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (24,270,972 samples, 0.01%)</title><rect x="98.5854%" y="757" width="0.0108%" height="15" fill="rgb(206,159,16)" fg:x="220552321797" fg:w="24270972"/><text x="98.8354%" y="767.50"></text></g><g><title>core::num::dec2flt::common::is_8digits (36,578,128 samples, 0.02%)</title><rect x="98.5818%" y="773" width="0.0164%" height="15" fill="rgb(244,77,30)" fg:x="220544107410" fg:w="36578128"/><text x="98.8318%" y="783.50"></text></g><g><title>core::num::dec2flt::parse::try_parse_digits (281,537,381 samples, 0.13%)</title><rect x="98.5041%" y="789" width="0.1258%" height="15" fill="rgb(218,69,12)" fg:x="220370273505" fg:w="281537381"/><text x="98.7541%" y="799.50"></text></g><g><title>core::num::dec2flt::parse::parse_8digits (71,125,348 samples, 0.03%)</title><rect x="98.5981%" y="773" width="0.0318%" height="15" fill="rgb(212,87,7)" fg:x="220580685538" fg:w="71125348"/><text x="98.8481%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (29,152,827 samples, 0.01%)</title><rect x="98.6169%" y="757" width="0.0130%" height="15" fill="rgb(245,114,25)" fg:x="220622658059" fg:w="29152827"/><text x="98.8669%" y="767.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (372,911,795 samples, 0.17%)</title><rect x="98.4651%" y="821" width="0.1667%" height="15" fill="rgb(210,61,42)" fg:x="220283035733" fg:w="372911795"/><text x="98.7151%" y="831.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_number (331,294,182 samples, 0.15%)</title><rect x="98.4837%" y="805" width="0.1481%" height="15" fill="rgb(211,52,33)" fg:x="220324653346" fg:w="331294182"/><text x="98.7337%" y="815.50"></text></g><g><title>&lt;f64 as num_traits::Num&gt;::from_str_radix (517,743,488 samples, 0.23%)</title><rect x="98.4040%" y="885" width="0.2314%" height="15" fill="rgb(234,58,33)" fg:x="220146507590" fg:w="517743488"/><text x="98.6540%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (509,550,697 samples, 0.23%)</title><rect x="98.4077%" y="869" width="0.2278%" height="15" fill="rgb(220,115,36)" fg:x="220154700381" fg:w="509550697"/><text x="98.6577%" y="879.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (509,550,697 samples, 0.23%)</title><rect x="98.4077%" y="853" width="0.2278%" height="15" fill="rgb(243,153,54)" fg:x="220154700381" fg:w="509550697"/><text x="98.6577%" y="863.50"></text></g><g><title>core::num::dec2flt::dec2flt (480,756,152 samples, 0.21%)</title><rect x="98.4206%" y="837" width="0.2149%" height="15" fill="rgb(251,47,18)" fg:x="220183494926" fg:w="480756152"/><text x="98.6706%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (107,454,351 samples, 0.05%)</title><rect x="98.6355%" y="805" width="0.0480%" height="15" fill="rgb(242,102,42)" fg:x="220664251078" fg:w="107454351"/><text x="98.8855%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (107,454,351 samples, 0.05%)</title><rect x="98.6355%" y="789" width="0.0480%" height="15" fill="rgb(234,31,38)" fg:x="220664251078" fg:w="107454351"/><text x="98.8855%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (107,454,351 samples, 0.05%)</title><rect x="98.6355%" y="773" width="0.0480%" height="15" fill="rgb(221,117,51)" fg:x="220664251078" fg:w="107454351"/><text x="98.8855%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (107,454,351 samples, 0.05%)</title><rect x="98.6355%" y="757" width="0.0480%" height="15" fill="rgb(212,20,18)" fg:x="220664251078" fg:w="107454351"/><text x="98.8855%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94,952,686 samples, 0.04%)</title><rect x="98.6411%" y="741" width="0.0424%" height="15" fill="rgb(245,133,36)" fg:x="220676752743" fg:w="94952686"/><text x="98.8911%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94,952,686 samples, 0.04%)</title><rect x="98.6411%" y="725" width="0.0424%" height="15" fill="rgb(212,6,19)" fg:x="220676752743" fg:w="94952686"/><text x="98.8911%" y="735.50"></text></g><g><title>alloc::alloc::alloc (94,952,686 samples, 0.04%)</title><rect x="98.6411%" y="709" width="0.0424%" height="15" fill="rgb(218,1,36)" fg:x="220676752743" fg:w="94952686"/><text x="98.8911%" y="719.50"></text></g><g><title>malloc (65,966,494 samples, 0.03%)</title><rect x="98.6540%" y="693" width="0.0295%" height="15" fill="rgb(246,84,54)" fg:x="220705738935" fg:w="65966494"/><text x="98.9040%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (132,139,928 samples, 0.06%)</title><rect x="98.6355%" y="885" width="0.0591%" height="15" fill="rgb(242,110,6)" fg:x="220664251078" fg:w="132139928"/><text x="98.8855%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (132,139,928 samples, 0.06%)</title><rect x="98.6355%" y="869" width="0.0591%" height="15" fill="rgb(214,47,5)" fg:x="220664251078" fg:w="132139928"/><text x="98.8855%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (132,139,928 samples, 0.06%)</title><rect x="98.6355%" y="853" width="0.0591%" height="15" fill="rgb(218,159,25)" fg:x="220664251078" fg:w="132139928"/><text x="98.8855%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (132,139,928 samples, 0.06%)</title><rect x="98.6355%" y="837" width="0.0591%" height="15" fill="rgb(215,211,28)" fg:x="220664251078" fg:w="132139928"/><text x="98.8855%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (132,139,928 samples, 0.06%)</title><rect x="98.6355%" y="821" width="0.0591%" height="15" fill="rgb(238,59,32)" fg:x="220664251078" fg:w="132139928"/><text x="98.8855%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (24,685,577 samples, 0.01%)</title><rect x="98.6835%" y="805" width="0.0110%" height="15" fill="rgb(226,82,3)" fg:x="220771705429" fg:w="24685577"/><text x="98.9335%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,685,577 samples, 0.01%)</title><rect x="98.6835%" y="789" width="0.0110%" height="15" fill="rgb(240,164,32)" fg:x="220771705429" fg:w="24685577"/><text x="98.9335%" y="799.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for usize&gt;::from_str (157,165,566 samples, 0.07%)</title><rect x="98.6945%" y="885" width="0.0703%" height="15" fill="rgb(232,46,7)" fg:x="220796391006" fg:w="157165566"/><text x="98.9445%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (157,165,566 samples, 0.07%)</title><rect x="98.6945%" y="869" width="0.0703%" height="15" fill="rgb(229,129,53)" fg:x="220796391006" fg:w="157165566"/><text x="98.9445%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (157,165,566 samples, 0.07%)</title><rect x="98.6945%" y="853" width="0.0703%" height="15" fill="rgb(234,188,29)" fg:x="220796391006" fg:w="157165566"/><text x="98.9445%" y="863.50"></text></g><g><title>cfree (60,539,757 samples, 0.03%)</title><rect x="98.7739%" y="853" width="0.0271%" height="15" fill="rgb(246,141,4)" fg:x="220974019760" fg:w="60539757"/><text x="99.0239%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or (114,211,847 samples, 0.05%)</title><rect x="98.7648%" y="885" width="0.0511%" height="15" fill="rgb(229,23,39)" fg:x="220953556572" fg:w="114211847"/><text x="99.0148%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;f64,matrix_market_rs::MtxError&gt;&gt; (110,046,211 samples, 0.05%)</title><rect x="98.7667%" y="869" width="0.0492%" height="15" fill="rgb(206,12,3)" fg:x="220957722208" fg:w="110046211"/><text x="99.0167%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;matrix_market_rs::MtxError&gt; (33,208,902 samples, 0.01%)</title><rect x="98.8010%" y="853" width="0.0148%" height="15" fill="rgb(252,226,20)" fg:x="221034559517" fg:w="33208902"/><text x="99.0510%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="837" width="0.0130%" height="15" fill="rgb(216,123,35)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="821" width="0.0130%" height="15" fill="rgb(212,68,40)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="805" width="0.0130%" height="15" fill="rgb(254,125,32)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="789" width="0.0130%" height="15" fill="rgb(253,97,22)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="773" width="0.0130%" height="15" fill="rgb(241,101,14)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="757" width="0.0130%" height="15" fill="rgb(238,103,29)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (29,039,971 samples, 0.01%)</title><rect x="98.8029%" y="741" width="0.0130%" height="15" fill="rgb(233,195,47)" fg:x="221038728448" fg:w="29039971"/><text x="99.0529%" y="751.50"></text></g><g><title>matrix_market_rs::parse_coords_val (1,801,486,347 samples, 0.81%)</title><rect x="98.0161%" y="901" width="0.8053%" height="15" fill="rgb(246,218,30)" fg:x="219278640791" fg:w="1801486347"/><text x="98.2661%" y="911.50"></text></g><g><title>core::str::converts::from_utf8 (135,816,050 samples, 0.06%)</title><rect x="98.8417%" y="869" width="0.0607%" height="15" fill="rgb(219,145,47)" fg:x="221125522402" fg:w="135816050"/><text x="99.0917%" y="879.50"></text></g><g><title>core::str::validations::run_utf8_validation (110,916,471 samples, 0.05%)</title><rect x="98.8528%" y="853" width="0.0496%" height="15" fill="rgb(243,12,26)" fg:x="221150421981" fg:w="110916471"/><text x="99.1028%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (54,044,692 samples, 0.02%)</title><rect x="98.9191%" y="837" width="0.0242%" height="15" fill="rgb(214,87,16)" fg:x="221298664792" fg:w="54044692"/><text x="99.1691%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (54,044,692 samples, 0.02%)</title><rect x="98.9191%" y="821" width="0.0242%" height="15" fill="rgb(208,99,42)" fg:x="221298664792" fg:w="54044692"/><text x="99.1691%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (54,044,692 samples, 0.02%)</title><rect x="98.9191%" y="805" width="0.0242%" height="15" fill="rgb(253,99,2)" fg:x="221298664792" fg:w="54044692"/><text x="99.1691%" y="815.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (23,866,755 samples, 0.01%)</title><rect x="98.9716%" y="789" width="0.0107%" height="15" fill="rgb(220,168,23)" fg:x="221416321861" fg:w="23866755"/><text x="99.2216%" y="799.50"></text></g><g><title>matrix_market_rs::MtxData&lt;T,_&gt;::from_file (2,320,698,553 samples, 1.04%)</title><rect x="97.9958%" y="933" width="1.0373%" height="15" fill="rgb(242,38,24)" fg:x="219233256387" fg:w="2320698553"/><text x="98.2458%" y="943.50"></text></g><g><title>matrix_market_rs::parse_sparse_coo (2,320,698,553 samples, 1.04%)</title><rect x="97.9958%" y="917" width="1.0373%" height="15" fill="rgb(225,182,9)" fg:x="219233256387" fg:w="2320698553"/><text x="98.2458%" y="927.50"></text></g><g><title>std::io::BufRead::read_line (473,827,802 samples, 0.21%)</title><rect x="98.8214%" y="901" width="0.2118%" height="15" fill="rgb(243,178,37)" fg:x="221080127138" fg:w="473827802"/><text x="99.0714%" y="911.50"></text></g><g><title>std::io::append_to_string (473,827,802 samples, 0.21%)</title><rect x="98.8214%" y="885" width="0.2118%" height="15" fill="rgb(232,139,19)" fg:x="221080127138" fg:w="473827802"/><text x="99.0714%" y="895.50"></text></g><g><title>std::io::BufRead::read_line::_{{closure}} (292,616,488 samples, 0.13%)</title><rect x="98.9024%" y="869" width="0.1308%" height="15" fill="rgb(225,201,24)" fg:x="221261338452" fg:w="292616488"/><text x="99.1524%" y="879.50"></text></g><g><title>std::io::read_until (292,616,488 samples, 0.13%)</title><rect x="98.9024%" y="853" width="0.1308%" height="15" fill="rgb(221,47,46)" fg:x="221261338452" fg:w="292616488"/><text x="99.1524%" y="863.50"></text></g><g><title>core::slice::memchr::memchr (201,245,456 samples, 0.09%)</title><rect x="98.9432%" y="837" width="0.0900%" height="15" fill="rgb(249,23,13)" fg:x="221352709484" fg:w="201245456"/><text x="99.1932%" y="847.50"></text></g><g><title>core::slice::memchr::memchr_aligned (192,908,508 samples, 0.09%)</title><rect x="98.9469%" y="821" width="0.0862%" height="15" fill="rgb(219,9,5)" fg:x="221361046432" fg:w="192908508"/><text x="99.1969%" y="831.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (180,447,001 samples, 0.08%)</title><rect x="98.9525%" y="805" width="0.0807%" height="15" fill="rgb(254,171,16)" fg:x="221373507939" fg:w="180447001"/><text x="99.2025%" y="815.50"></text></g><g><title>core::slice::memchr::memchr_naive (113,766,324 samples, 0.05%)</title><rect x="98.9823%" y="789" width="0.0509%" height="15" fill="rgb(230,171,20)" fg:x="221440188616" fg:w="113766324"/><text x="99.2323%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (82,025,284 samples, 0.04%)</title><rect x="99.0541%" y="917" width="0.0367%" height="15" fill="rgb(210,71,41)" fg:x="221600719119" fg:w="82025284"/><text x="99.3041%" y="927.50"></text></g><g><title>par_matvec::test_utils::FaerLoader::load_from_matrix_market (5,903,270,736 samples, 2.64%)</title><rect x="96.4734%" y="949" width="2.6387%" height="15" fill="rgb(206,173,20)" fg:x="215827419716" fg:w="5903270736"/><text x="96.7234%" y="959.50">pa..</text></g><g><title>par_matvec::test_utils::mtx_data_to_nalgebra_coo (176,735,512 samples, 0.08%)</title><rect x="99.0332%" y="933" width="0.0790%" height="15" fill="rgb(233,88,34)" fg:x="221553954940" fg:w="176735512"/><text x="99.2832%" y="943.50"></text></g><g><title>nalgebra_sparse::coo::CooMatrix&lt;T&gt;::try_from_triplets (47,946,049 samples, 0.02%)</title><rect x="99.0907%" y="917" width="0.0214%" height="15" fill="rgb(223,209,46)" fg:x="221682744403" fg:w="47946049"/><text x="99.3407%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (47,946,049 samples, 0.02%)</title><rect x="99.0907%" y="901" width="0.0214%" height="15" fill="rgb(250,43,18)" fg:x="221682744403" fg:w="47946049"/><text x="99.3407%" y="911.50"></text></g><g><title>faer::linalg::temp_mat_zeroed (1,381,205,601 samples, 0.62%)</title><rect x="99.1122%" y="901" width="0.6174%" height="15" fill="rgb(208,13,10)" fg:x="221730690452" fg:w="1381205601"/><text x="99.3622%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,381,205,601 samples, 0.62%)</title><rect x="99.1122%" y="885" width="0.6174%" height="15" fill="rgb(212,200,36)" fg:x="221730690452" fg:w="1381205601"/><text x="99.3622%" y="895.50"></text></g><g><title>core::ptr::write (1,381,205,601 samples, 0.62%)</title><rect x="99.1122%" y="869" width="0.6174%" height="15" fill="rgb(225,90,30)" fg:x="221730690452" fg:w="1381205601"/><text x="99.3622%" y="879.50"></text></g><g><title>[libc.so.6] (1,381,205,601 samples, 0.62%)</title><rect x="99.1122%" y="853" width="0.6174%" height="15" fill="rgb(236,182,39)" fg:x="221730690452" fg:w="1381205601"/><text x="99.3622%" y="863.50"></text></g><g><title>faer::col::colmut::&lt;impl faer::col::generic::Col&lt;Inner&gt;&gt;::fill (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="789" width="0.1082%" height="15" fill="rgb(212,144,35)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="799.50"></text></g><g><title>faer::linalg::zip::LastEq&lt;Rows,(),M&gt;::for_each (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="773" width="0.1082%" height="15" fill="rgb(228,63,44)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="783.50"></text></g><g><title>faer::linalg::zip::for_each_col (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="757" width="0.1082%" height="15" fill="rgb(228,109,6)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="767.50"></text></g><g><title>faer::linalg::zip::annotate_noalias_col (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="741" width="0.1082%" height="15" fill="rgb(238,117,24)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="751.50"></text></g><g><title>faer::col::colmut::_&lt;impl faer::col::generic::Col&lt;Inner&gt;&gt;::fill::cloner::_{{closure}} (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="725" width="0.1082%" height="15" fill="rgb(242,26,26)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="735.50"></text></g><g><title>[libc.so.6] (242,014,150 samples, 0.11%)</title><rect x="99.7372%" y="709" width="0.1082%" height="15" fill="rgb(221,92,48)" fg:x="223129039894" fg:w="242014150"/><text x="99.9872%" y="719.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (34,873,182 samples, 0.02%)</title><rect x="99.8508%" y="741" width="0.0156%" height="15" fill="rgb(209,209,32)" fg:x="223383099479" fg:w="34873182"/><text x="100.1008%" y="751.50"></text></g><g><title>pthread_create (28,209,919 samples, 0.01%)</title><rect x="99.8538%" y="725" width="0.0126%" height="15" fill="rgb(221,70,22)" fg:x="223389762742" fg:w="28209919"/><text x="100.1038%" y="735.50"></text></g><g><title>std::panic::catch_unwind (294,248,289 samples, 0.13%)</title><rect x="99.7359%" y="885" width="0.1315%" height="15" fill="rgb(248,145,5)" fg:x="223126132547" fg:w="294248289"/><text x="99.9859%" y="895.50"></text></g><g><title>std::panicking::try (294,248,289 samples, 0.13%)</title><rect x="99.7359%" y="869" width="0.1315%" height="15" fill="rgb(226,116,26)" fg:x="223126132547" fg:w="294248289"/><text x="99.9859%" y="879.50"></text></g><g><title>std::panicking::try::do_call (293,072,515 samples, 0.13%)</title><rect x="99.7364%" y="853" width="0.1310%" height="15" fill="rgb(244,5,17)" fg:x="223127308321" fg:w="293072515"/><text x="99.9864%" y="863.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (293,072,515 samples, 0.13%)</title><rect x="99.7364%" y="837" width="0.1310%" height="15" fill="rgb(252,159,33)" fg:x="223127308321" fg:w="293072515"/><text x="99.9864%" y="847.50"></text></g><g><title>std::thread::scoped::scope::_{{closure}} (293,072,515 samples, 0.13%)</title><rect x="99.7364%" y="821" width="0.1310%" height="15" fill="rgb(206,71,0)" fg:x="223127308321" fg:w="293072515"/><text x="99.9864%" y="831.50"></text></g><g><title>par_matvec::sparse_dense_impl::simple::par_sparse_dense::_{{closure}} (293,072,515 samples, 0.13%)</title><rect x="99.7364%" y="805" width="0.1310%" height="15" fill="rgb(233,118,54)" fg:x="223127308321" fg:w="293072515"/><text x="99.9864%" y="815.50"></text></g><g><title>std::thread::scoped::Scope::spawn (49,326,792 samples, 0.02%)</title><rect x="99.8454%" y="789" width="0.0220%" height="15" fill="rgb(234,83,48)" fg:x="223371054044" fg:w="49326792"/><text x="100.0954%" y="799.50"></text></g><g><title>std::thread::scoped::&lt;impl std::thread::Builder&gt;::spawn_scoped (49,326,792 samples, 0.02%)</title><rect x="99.8454%" y="773" width="0.0220%" height="15" fill="rgb(228,3,54)" fg:x="223371054044" fg:w="49326792"/><text x="100.0954%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (46,090,147 samples, 0.02%)</title><rect x="99.8468%" y="757" width="0.0206%" height="15" fill="rgb(226,155,13)" fg:x="223374290689" fg:w="46090147"/><text x="100.0968%" y="767.50"></text></g><g><title>par_matvec::spmv_drivers::sparse_dense_matmul (1,693,768,333 samples, 0.76%)</title><rect x="99.1122%" y="933" width="0.7571%" height="15" fill="rgb(241,28,37)" fg:x="221730690452" fg:w="1693768333"/><text x="99.3622%" y="943.50"></text></g><g><title>par_matvec::sparse_dense_impl::simple::par_sparse_dense (1,693,768,333 samples, 0.76%)</title><rect x="99.1122%" y="917" width="0.7571%" height="15" fill="rgb(233,93,10)" fg:x="221730690452" fg:w="1693768333"/><text x="99.3622%" y="927.50"></text></g><g><title>std::thread::scoped::scope (304,641,754 samples, 0.14%)</title><rect x="99.7331%" y="901" width="0.1362%" height="15" fill="rgb(225,113,19)" fg:x="223119817031" fg:w="304641754"/><text x="99.9831%" y="911.50"></text></g><g><title>std::panic::catch_unwind (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="1077" width="3.3960%" height="15" fill="rgb(241,2,18)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1087.50">std..</text></g><g><title>std::panicking::try (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="1061" width="3.3960%" height="15" fill="rgb(228,207,21)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1071.50">std..</text></g><g><title>std::panicking::try::do_call (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="1045" width="3.3960%" height="15" fill="rgb(213,211,35)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1055.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="1029" width="3.3960%" height="15" fill="rgb(209,83,10)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1039.50">cor..</text></g><g><title>std::rt::lang_start::_{{closure}} (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="1013" width="3.3960%" height="15" fill="rgb(209,164,1)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1023.50">std..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="997" width="3.3960%" height="15" fill="rgb(213,184,43)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="1007.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="981" width="3.3960%" height="15" fill="rgb(231,61,34)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="991.50">cor..</text></g><g><title>profile_spmv::main (7,597,536,902 samples, 3.40%)</title><rect x="96.4734%" y="965" width="3.3960%" height="15" fill="rgb(235,75,3)" fg:x="215827419716" fg:w="7597536902"/><text x="96.7234%" y="975.50">pro..</text></g><g><title>profile_spmv::profile_sparse_dense_simple (1,694,266,166 samples, 0.76%)</title><rect x="99.1122%" y="949" width="0.7573%" height="15" fill="rgb(220,106,47)" fg:x="221730690452" fg:w="1694266166"/><text x="99.3622%" y="959.50"></text></g><g><title>_start (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1221" width="3.3963%" height="15" fill="rgb(210,196,33)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1231.50">_st..</text></g><g><title>__libc_start_main (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1205" width="3.3963%" height="15" fill="rgb(229,154,42)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1215.50">__l..</text></g><g><title>[libc.so.6] (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1189" width="3.3963%" height="15" fill="rgb(228,114,26)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1199.50">[li..</text></g><g><title>main (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1173" width="3.3963%" height="15" fill="rgb(208,144,1)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1183.50">main</text></g><g><title>std::rt::lang_start_internal (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1157" width="3.3963%" height="15" fill="rgb(239,112,37)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1167.50">std..</text></g><g><title>std::panic::catch_unwind (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1141" width="3.3963%" height="15" fill="rgb(210,96,50)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1151.50">std..</text></g><g><title>std::panicking::try (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1125" width="3.3963%" height="15" fill="rgb(222,178,2)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1135.50">std..</text></g><g><title>std::panicking::try::do_call (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1109" width="3.3963%" height="15" fill="rgb(226,74,18)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1119.50">std..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (7,598,038,406 samples, 3.40%)</title><rect x="96.4734%" y="1093" width="3.3963%" height="15" fill="rgb(225,67,54)" fg:x="215827419716" fg:w="7598038406"/><text x="96.7234%" y="1103.50">std..</text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (56,752,898 samples, 0.03%)</title><rect x="99.9126%" y="1221" width="0.0254%" height="15" fill="rgb(251,92,32)" fg:x="223521483269" fg:w="56752898"/><text x="100.1626%" y="1231.50"></text></g><g><title>crossbeam_epoch::default::with_handle (63,240,609 samples, 0.03%)</title><rect x="99.9404%" y="1221" width="0.0283%" height="15" fill="rgb(228,149,22)" fg:x="223583672807" fg:w="63240609"/><text x="100.1904%" y="1231.50"></text></g><g><title>all (223,716,919,725 samples, 100%)</title><rect x="0.0000%" y="1253" width="100.0000%" height="15" fill="rgb(243,54,13)" fg:x="0" fg:w="223716919725"/><text x="0.2500%" y="1263.50"></text></g><g><title>profile_spmv (223,713,840,017 samples, 100.00%)</title><rect x="0.0014%" y="1237" width="99.9986%" height="15" fill="rgb(243,180,28)" fg:x="3079708" fg:w="223713840017"/><text x="0.2514%" y="1247.50">profile_spmv</text></g></svg></svg>